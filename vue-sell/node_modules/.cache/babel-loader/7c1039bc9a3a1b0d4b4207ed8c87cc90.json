{"remainingRequest":"/Users/tanlingling/Desktop/sell/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/tanlingling/Desktop/sell/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tanlingling/Desktop/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/Desktop/sell/node_modules/cube-ui/src/components/textarea/textarea.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tanlingling/Desktop/sell/node_modules/cube-ui/src/components/textarea/textarea.vue","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"/Users/tanlingling/Desktop/sell/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar COMPONENT_NAME = 'cube-textarea';\nvar EVENT_INPUT = 'input';\nvar DEFAULT_INDICATOR = {\n  negative: true,\n  remain: true\n};\nexport default {\n  name: COMPONENT_NAME,\n  data: function data() {\n    return {\n      textareaValue: this.value,\n      expanded: this.autoExpand ? !!this.value : false,\n      isFocus: false\n    };\n  },\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    cols: Number,\n    rows: Number,\n    readonly: Boolean,\n    wrap: String,\n    required: Boolean,\n    placeholder: {\n      type: String,\n      default: 'please type here...'\n    },\n    dirname: String,\n    form: String,\n    name: String,\n    autofocus: Boolean,\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    maxlength: {\n      type: Number,\n      default: 60\n    },\n    indicator: {\n      type: [Boolean, Object],\n      default: true\n    },\n    autoExpand: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    indicatorConf: function indicatorConf() {\n      var indicator = this.indicator;\n\n      if (typeof indicator === 'boolean') {\n        indicator = {};\n      }\n\n      return _Object$assign({}, DEFAULT_INDICATOR, indicator);\n    },\n    count: function count() {\n      return this.textareaValue.length;\n    },\n    remain: function remain() {\n      var diff = this.maxlength - this.count;\n\n      if (!this.indicatorConf.negative && diff < 0) {\n        diff = 0;\n      }\n\n      return diff;\n    }\n  },\n  watch: {\n    value: function value(newValue) {\n      this.textareaValue = newValue;\n    },\n    textareaValue: function textareaValue(newValue) {\n      this.$emit(EVENT_INPUT, newValue);\n\n      if (!this.isFocus && this.expanded) {\n        this.expanded = false;\n      }\n    }\n  },\n  methods: {\n    handleFocus: function handleFocus(e) {\n      this.$emit('focus', e);\n      this.expanded = true;\n      this.isFocus = true;\n    },\n    handleBlur: function handleBlur(e) {\n      this.$emit('blur', e);\n\n      if (this.textareaValue.length === 0) {\n        this.expanded = false;\n      }\n\n      this.isFocus = false;\n    }\n  }\n};",{"version":3,"sources":["textarea.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"cube-textarea-wrapper\" :class=\"{'cube-textarea_expanded': expanded, 'cube-textarea_active': isFocus}\">\n    <textarea\n      class=\"cube-textarea\"\n      v-model=\"textareaValue\"\n      v-bind=\"$props\"\n      :placeholder=\"placeholder\"\n      :maxlength=\"maxlength\"\n      :disabled=\"disabled\"\n      @focus=\"handleFocus\"\n      @blur=\"handleBlur\">\n    </textarea>\n    <span v-if=\"indicator\" v-show=\"expanded\" class=\"cube-textarea-indicator\">{{indicatorConf.remain ? remain : count}}</span>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  const COMPONENT_NAME = 'cube-textarea'\n  const EVENT_INPUT = 'input'\n\n  const DEFAULT_INDICATOR = {\n    negative: true,\n    remain: true\n  }\n\n  export default {\n    name: COMPONENT_NAME,\n    data() {\n      return {\n        textareaValue: this.value,\n        expanded: this.autoExpand ? !!this.value : false,\n        isFocus: false\n      }\n    },\n    props: {\n      value: {\n        type: String,\n        default: ''\n      },\n      cols: Number,\n      rows: Number,\n      readonly: Boolean,\n      wrap: String,\n      required: Boolean,\n      placeholder: {\n        type: String,\n        default: 'please type here...'\n      },\n      dirname: String,\n      form: String,\n      name: String,\n      autofocus: Boolean,\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n      maxlength: {\n        type: Number,\n        default: 60\n      },\n      indicator: {\n        type: [Boolean, Object],\n        default: true\n      },\n      autoExpand: {\n        type: Boolean,\n        default: false\n      }\n    },\n    computed: {\n      indicatorConf() {\n        let indicator = this.indicator\n        if (typeof indicator === 'boolean') {\n          indicator = {}\n        }\n        return Object.assign({}, DEFAULT_INDICATOR, indicator)\n      },\n      count() {\n        return this.textareaValue.length\n      },\n      remain() {\n        let diff = this.maxlength - this.count\n        if (!this.indicatorConf.negative && diff < 0) {\n          diff = 0\n        }\n        return diff\n      }\n    },\n    watch: {\n      value(newValue) {\n        this.textareaValue = newValue\n      },\n      textareaValue(newValue) {\n        this.$emit(EVENT_INPUT, newValue)\n        if (!this.isFocus && this.expanded) {\n          this.expanded = false\n        }\n      }\n    },\n    methods: {\n      handleFocus(e) {\n        this.$emit('focus', e)\n        this.expanded = true\n        this.isFocus = true\n      },\n      handleBlur(e) {\n        this.$emit('blur', e)\n        if (this.textareaValue.length === 0) {\n          this.expanded = false\n        }\n        this.isFocus = false\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n  @require \"../../common/stylus/mixin.styl\"\n\n  .cube-textarea-wrapper\n    position: relative\n    transition: height 200ms\n    height: 40px\n    font-size: $fontsize-medium\n    line-height: 1.429\n    textarea::-webkit-input-placeholder\n      color: $textarea-placeholder-color\n      text-overflow: ellipsis\n    border-1px($textarea-border-color)\n  .cube-textarea_expanded\n    height: 80px\n  .cube-textarea_active\n    border-1px($textarea-focus-border-color)\n  .cube-textarea-indicator\n    position: absolute\n    bottom: 7px\n    right: 10px\n    color: $textarea-indicator-color\n  .cube-textarea\n    width: 100%\n    height: 100%\n    text-align: left\n    padding: 10px\n    box-sizing: border-box\n    font-size: 100%\n    line-height: inherit\n    color: $textarea-color\n    background-color: $textarea-bgc\n    border-radius: 2px\n    resize: none\n    border: none\n    outline: none\n</style>\n"],"sourceRoot":"node_modules/cube-ui/src/components/textarea"}]}