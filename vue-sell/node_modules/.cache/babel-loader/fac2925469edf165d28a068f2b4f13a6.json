{"remainingRequest":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js??ref--30-1!/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/common/helpers/validator/messages.js","dependencies":[{"path":"/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/common/helpers/validator/messages.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/tanlingling/git/vue-sell/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { deepAssign } from '../util';\n\nfunction addMessage() {\n  var NAMESPACE = 'validator';\n  var vueProto = this._base.prototype;\n  var lang = vueProto.$cubeLang;\n  var baseMessages = vueProto.$cubeMessages[lang][NAMESPACE];\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (typeof args[0] === 'string') {\n    args[0] = _defineProperty({}, args[0], args[1]);\n  }\n\n  deepAssign(baseMessages, args[0]);\n}\n\nexport { addMessage };",{"version":3,"sources":["/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/common/helpers/validator/messages.js"],"names":["deepAssign","addMessage","NAMESPACE","vueProto","_base","prototype","lang","$cubeLang","baseMessages","$cubeMessages","args"],"mappings":";AAAA,SAASA,UAAT,QAA2B,SAA3B;;AAEA,SAASC,UAAT,GAA8B;AAC5B,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,SAA5B;AACA,MAAMC,IAAI,GAAGH,QAAQ,CAACI,SAAtB;AACA,MAAMC,YAAY,GAAGL,QAAQ,CAACM,aAAT,CAAuBH,IAAvB,EAA6BJ,SAA7B,CAArB;;AAJ4B,oCAANQ,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAM5B,MAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC;AAC/BA,IAAAA,IAAI,CAAC,CAAD,CAAJ,uBACGA,IAAI,CAAC,CAAD,CADP,EACaA,IAAI,CAAC,CAAD,CADjB;AAGD;;AAEDV,EAAAA,UAAU,CAACQ,YAAD,EAAeE,IAAI,CAAC,CAAD,CAAnB,CAAV;AACD;;AAED,SAAST,UAAT","sourcesContent":["import { deepAssign } from '../util'\n\nfunction addMessage (...args) {\n  const NAMESPACE = 'validator'\n  const vueProto = this._base.prototype\n  const lang = vueProto.$cubeLang\n  const baseMessages = vueProto.$cubeMessages[lang][NAMESPACE]\n\n  if (typeof args[0] === 'string') {\n    args[0] = {\n      [args[0]]: args[1]\n    }\n  }\n\n  deepAssign(baseMessages, args[0])\n}\n\nexport { addMessage }\n"]}]}