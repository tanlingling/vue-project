{"remainingRequest":"/Users/tanlingling/git/vue-sell/node_modules/thread-loader/dist/cjs.js!/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js??ref--30-2!/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/modules/date-picker/api.js","dependencies":[{"path":"/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/modules/date-picker/api.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import createAPI from '../../common/helpers/create-api';\nimport { tip } from '../../common/helpers/debug';\nexport default function addDatePicker(Vue, DatePicker) {\n  var datePickerAPI = createAPI(Vue, DatePicker, ['select', 'cancel', 'change']);\n  datePickerAPI.before(function (data, renderFn, single) {\n    if (single) {\n      tip('DatePicker component can not be a singleton.');\n    }\n  });\n}",{"version":3,"sources":["/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/modules/date-picker/api.js"],"names":["createAPI","tip","addDatePicker","Vue","DatePicker","datePickerAPI","before","data","renderFn","single"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iCAAtB;AACA,SAASC,GAAT,QAAoB,4BAApB;AAEA,eAAe,SAASC,aAAT,CAAwBC,GAAxB,EAA6BC,UAA7B,EAAyC;AACtD,MAAMC,aAAa,GAAGL,SAAS,CAACG,GAAD,EAAMC,UAAN,EAAkB,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,CAAlB,CAA/B;AACAC,EAAAA,aAAa,CAACC,MAAd,CAAqB,UAACC,IAAD,EAAOC,QAAP,EAAiBC,MAAjB,EAA4B;AAC/C,QAAIA,MAAJ,EAAY;AACVR,MAAAA,GAAG,CAAC,8CAAD,CAAH;AACD;AACF,GAJD;AAKD","sourcesContent":["import createAPI from '../../common/helpers/create-api'\nimport { tip } from '../../common/helpers/debug'\n\nexport default function addDatePicker (Vue, DatePicker) {\n  const datePickerAPI = createAPI(Vue, DatePicker, ['select', 'cancel', 'change'])\n  datePickerAPI.before((data, renderFn, single) => {\n    if (single) {\n      tip('DatePicker component can not be a singleton.')\n    }\n  })\n}\n"]}]}