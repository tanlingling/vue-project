{"remainingRequest":"/Users/tanlingling/git/vue-sell/node_modules/thread-loader/dist/cjs.js!/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js??ref--30-2!/Users/tanlingling/git/vue-sell/node_modules/eslint-loader/index.js??ref--13-0!/Users/tanlingling/git/vue-sell/src/api/helpers.js","dependencies":[{"path":"/Users/tanlingling/git/vue-sell/src/api/helpers.js","mtime":1548234834724},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nvar ERR_OK = 0;\nexport function get(url) {\n  return function (params) {\n    return axios.get(url, {\n      params: params\n    }).then(function (res) {\n      var _res$data = res.data,\n          errno = _res$data.errno,\n          data = _res$data.data;\n\n      if (errno === ERR_OK) {\n        return data;\n      }\n    }).catch(function () {});\n  };\n}",{"version":3,"sources":["/Users/tanlingling/git/vue-sell/src/api/helpers.js"],"names":["axios","ERR_OK","get","url","params","then","res","data","errno","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,MAAM,GAAG,CAAf;AAEA,OAAO,SAASC,GAAT,CAAcC,GAAd,EAAmB;AACxB,SAAO,UAAUC,MAAV,EAAkB;AACvB,WAAOJ,KAAK,CAACE,GAAN,CAAUC,GAAV,EAAe;AACpBC,MAAAA,MAAM,EAANA;AADoB,KAAf,EAEJC,IAFI,CAEC,UAACC,GAAD,EAAS;AAAA,sBACOA,GAAG,CAACC,IADX;AAAA,UACRC,KADQ,aACRA,KADQ;AAAA,UACDD,IADC,aACDA,IADC;;AAEf,UAAIC,KAAK,KAAKP,MAAd,EAAsB;AACpB,eAAOM,IAAP;AACD;AACF,KAPM,EAOJE,KAPI,CAOE,YAAM,CAEd,CATM,CAAP;AAUD,GAXD;AAYD","sourcesContent":["import axios from 'axios'\nconst ERR_OK = 0\n\nexport function get (url) {\n  return function (params) {\n    return axios.get(url, {\n      params\n    }).then((res) => {\n      const {errno, data} = res.data\n      if (errno === ERR_OK) {\n        return data\n      }\n    }).catch(() => {\n\n    })\n  }\n}"]}]}