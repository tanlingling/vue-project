{"remainingRequest":"/Users/tanlingling/Desktop/sell/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/tanlingling/Desktop/sell/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tanlingling/Desktop/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/Desktop/sell/node_modules/cube-ui/src/components/sticky/sticky.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tanlingling/Desktop/sell/node_modules/cube-ui/src/components/sticky/sticky.vue","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.fixed\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getRect, prefixStyle } from '../../common/helpers/dom';\nvar COMPONENT_NAME = 'cube-sticky';\nvar EVENT_CHANGE = 'change';\nvar EVENT_DIFF_CHANGE = 'diff-change';\nvar transformStyleKey = prefixStyle('transform');\nexport default {\n  name: COMPONENT_NAME,\n  provide: function provide() {\n    return {\n      sticky: this\n    };\n  },\n  props: {\n    pos: {\n      type: Number,\n      required: true\n    },\n    checkTop: {\n      type: Boolean,\n      default: true\n    },\n    fixedShowAni: {\n      type: String,\n      default: function _default() {\n        return this.checkTop ? '' : 'cube-sticky-fixed-fade';\n      }\n    },\n    offset: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      diff: 0,\n      currentDiff: 0,\n      currentIndex: -1,\n      currentKey: ''\n    };\n  },\n  computed: {\n    fixedShow: function fixedShow() {\n      var targetEle = this.eles[this.currentIndex];\n      return !!targetEle;\n    }\n  },\n  watch: {\n    diff: function diff(newVal) {\n      if (newVal >= 0) {\n        newVal = 0;\n      }\n\n      newVal = Math.ceil(newVal);\n\n      if (this._fixedTop === newVal) {\n        return;\n      }\n\n      this._fixedTop = newVal;\n      this.$refs.fixedEle.style[transformStyleKey] = \"translate3d(0, \".concat(newVal, \"px, 0)\");\n    },\n    pos: 'computeCurrentSticky',\n    currentIndex: function currentIndex(newIndex, oldIndex) {\n      var _this = this;\n\n      var oldEle = this.eles[oldIndex];\n      var newEle = this.eles[newIndex];\n      var currentKey = newEle && newEle.eleKey !== undefined ? newEle.eleKey : newIndex === -1 ? '' : newIndex;\n      var fixedEle = this.$refs.fixedEle;\n      var fixedSlot = this.$slots.fixed || this.$scopedSlots.fixed;\n      this.$nextTick(function () {\n        if (fixedSlot) {\n          _this.fixedEleHeight = fixedEle.offsetHeight;\n        } else {\n          var oldChild = fixedEle.firstElementChild;\n\n          if (oldEle) {\n            oldEle.$el.appendChild(oldChild);\n            oldEle.refresh();\n          }\n\n          if (newEle) {\n            fixedEle.appendChild(newEle.$el.firstElementChild);\n            _this.fixedEleHeight = fixedEle.offsetHeight;\n          } else {\n            _this.fixedEleHeight = 0;\n          }\n        }\n      });\n      this.currentKey = currentKey;\n      this.$emit(EVENT_CHANGE, currentKey, newIndex);\n    },\n    currentDiff: function currentDiff(newVal) {\n      var height = this.heights[this.currentIndex] || 0;\n      this.$emit(EVENT_DIFF_CHANGE, newVal, height);\n    }\n  },\n  created: function created() {\n    this.fixedEleHeight = 0;\n    this.eles = [];\n    this.positions = [];\n    this.heights = [];\n  },\n  mounted: function mounted() {\n    this.refresh();\n  },\n  methods: {\n    addEle: function addEle(ele) {\n      this.eles.push(ele);\n    },\n    removeEle: function removeEle(ele) {\n      var i = this.eles.indexOf(ele);\n      this.eles.splice(i, 1);\n      this.positions.splice(i, 1);\n    },\n    refresh: function refresh() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.eles.forEach(function (ele) {\n          ele.refresh();\n        });\n\n        _this2._calculateHeight();\n\n        _this2.computeCurrentSticky(_this2.pos);\n      });\n    },\n    computeCurrentSticky: function computeCurrentSticky(scrollY) {\n      scrollY += this.offset;\n      var positions = this.positions;\n      var heights = this.heights;\n      var checkTop = this.checkTop;\n      var len = positions.length;\n\n      for (var i = len - 1; i >= 0; i--) {\n        var isLast = i === len - 1;\n        var nextTop = isLast ? scrollY : positions[i + 1];\n        var top = void 0;\n        var bottom = void 0;\n\n        if (checkTop) {\n          top = positions[i];\n          bottom = top + heights[i];\n        } else {\n          top = positions[i] + heights[i];\n          bottom = top;\n        }\n\n        var max = Math.max(bottom, nextTop);\n\n        if (scrollY >= top && scrollY <= max) {\n          this.currentIndex = i;\n          this.currentDiff = scrollY - top;\n          var diff = nextTop - scrollY;\n\n          if (diff >= 0 && !isLast) {\n            this.diff = diff - (this.fixedEleHeight || heights[i]);\n          } else {\n            this.diff = 0;\n          }\n\n          return;\n        }\n      }\n\n      this.currentIndex = -1;\n      this.currentDiff = 0;\n    },\n    _calculateHeight: function _calculateHeight() {\n      var _this3 = this;\n\n      var eles = this.eles;\n      eles.forEach(function (ele, i) {\n        var _getRect = getRect(ele.$el),\n            top = _getRect.top,\n            height = _getRect.height;\n\n        _this3.positions[i] = top;\n        _this3.heights[i] = height;\n      });\n      this.fixedEleHeight = this.$refs.fixedEle.offsetHeight;\n    }\n  }\n};",{"version":3,"sources":["sticky.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"cube-sticky\">\n    <slot></slot>\n    <transition :name=\"fixedShowAni\">\n      <div\n        ref=\"fixedEle\"\n        v-show=\"fixedShow\"\n        class=\"cube-sticky-fixed\">\n        <slot name=\"fixed\" :current=\"currentKey\" :index=\"currentIndex\"></slot>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import {\n    getRect,\n    prefixStyle\n  } from '../../common/helpers/dom'\n\n  const COMPONENT_NAME = 'cube-sticky'\n  const EVENT_CHANGE = 'change'\n  const EVENT_DIFF_CHANGE = 'diff-change'\n\n  const transformStyleKey = prefixStyle('transform')\n\n  export default {\n    name: COMPONENT_NAME,\n    provide() {\n      return {\n        sticky: this\n      }\n    },\n    props: {\n      pos: {\n        type: Number,\n        required: true\n      },\n      checkTop: {\n        type: Boolean,\n        default: true\n      },\n      fixedShowAni: {\n        type: String,\n        default() {\n          return this.checkTop ? '' : 'cube-sticky-fixed-fade'\n        }\n      },\n      offset: {\n        type: Number,\n        default: 0\n      }\n    },\n    data() {\n      return {\n        diff: 0,\n        currentDiff: 0,\n        currentIndex: -1,\n        currentKey: ''\n      }\n    },\n    computed: {\n      fixedShow() {\n        const targetEle = this.eles[this.currentIndex]\n        return !!targetEle\n      }\n    },\n    watch: {\n      diff(newVal) {\n        if (newVal >= 0) {\n          newVal = 0\n        }\n        newVal = Math.ceil(newVal)\n        if (this._fixedTop === newVal) {\n          return\n        }\n        this._fixedTop = newVal\n        this.$refs.fixedEle.style[transformStyleKey] = `translate3d(0, ${newVal}px, 0)`\n      },\n      pos: 'computeCurrentSticky',\n      currentIndex(newIndex, oldIndex) {\n        const oldEle = this.eles[oldIndex]\n        const newEle = this.eles[newIndex]\n\n        const currentKey = (newEle && newEle.eleKey !== undefined) ? newEle.eleKey : newIndex === -1 ? '' : newIndex\n        const fixedEle = this.$refs.fixedEle\n        const fixedSlot = this.$slots.fixed || this.$scopedSlots.fixed\n\n        this.$nextTick(() => {\n          if (fixedSlot) {\n            this.fixedEleHeight = fixedEle.offsetHeight\n          } else {\n            const oldChild = fixedEle.firstElementChild\n            if (oldEle) {\n              oldEle.$el.appendChild(oldChild)\n              oldEle.refresh()\n            }\n            if (newEle) {\n              fixedEle.appendChild(newEle.$el.firstElementChild)\n              this.fixedEleHeight = fixedEle.offsetHeight\n            } else {\n              this.fixedEleHeight = 0\n            }\n          }\n        })\n\n        this.currentKey = currentKey\n        this.$emit(EVENT_CHANGE, currentKey, newIndex)\n      },\n      currentDiff(newVal) {\n        const height = this.heights[this.currentIndex] || 0\n        this.$emit(EVENT_DIFF_CHANGE, newVal, height)\n      }\n    },\n    created() {\n      this.fixedEleHeight = 0\n      this.eles = []\n      this.positions = []\n      this.heights = []\n    },\n    mounted() {\n      this.refresh()\n    },\n    methods: {\n      addEle(ele) {\n        this.eles.push(ele)\n      },\n      removeEle(ele) {\n        const i = this.eles.indexOf(ele)\n        this.eles.splice(i, 1)\n        this.positions.splice(i, 1)\n      },\n      refresh() {\n        this.$nextTick(() => {\n          this.eles.forEach((ele) => {\n            ele.refresh()\n          })\n          this._calculateHeight()\n          this.computeCurrentSticky(this.pos)\n        })\n      },\n      computeCurrentSticky(scrollY) {\n        scrollY += this.offset\n\n        const positions = this.positions\n        const heights = this.heights\n        const checkTop = this.checkTop\n\n        const len = positions.length\n        for (let i = len - 1; i >= 0; i--) {\n          const isLast = i === len - 1\n          const nextTop = isLast ? scrollY : positions[i + 1]\n          let top\n          let bottom\n          if (checkTop) {\n            top = positions[i]\n            bottom = top + heights[i]\n          } else {\n            top = positions[i] + heights[i]\n            bottom = top\n          }\n          const max = Math.max(bottom, nextTop)\n\n          if (scrollY >= top && scrollY <= max) {\n            this.currentIndex = i\n            this.currentDiff = scrollY - top\n            const diff = nextTop - scrollY\n            if (diff >= 0 && !isLast) {\n              this.diff = diff - (this.fixedEleHeight || heights[i])\n            } else {\n              this.diff = 0\n            }\n            return\n          }\n        }\n        this.currentIndex = -1\n        this.currentDiff = 0\n      },\n      _calculateHeight() {\n        const eles = this.eles\n        eles.forEach((ele, i) => {\n          const { top, height } = getRect(ele.$el)\n          this.positions[i] = top\n          this.heights[i] = height\n        })\n        this.fixedEleHeight = this.$refs.fixedEle.offsetHeight\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  .cube-sticky\n    position: relative\n    height: 100%\n    overflow: hidden\n  .cube-sticky-fixed\n    z-index: 1\n    position: absolute\n    top: 0\n    left: 0\n    right: 0\n  .cube-sticky-fixed-fade-enter, .cube-sticky-fixed-fade-leave-active\n    opacity: 0\n  .cube-sticky-fixed-fade-enter-active, .cube-sticky-fixed-fade-leave-active\n    transition: all .2s ease-in-out\n</style>\n"],"sourceRoot":"node_modules/cube-ui/src/components/sticky"}]}