{"remainingRequest":"/Users/tanlingling/git/vue-sell/node_modules/thread-loader/dist/cjs.js!/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js??ref--16-2!/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/components/segment-picker/segment-picker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/components/segment-picker/segment-picker.vue","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport visibilityMixin from '../../common/mixins/visibility';\nimport popupMixin from '../../common/mixins/popup';\nimport pickerMixin from '../../common/mixins/picker';\nimport localeMixin from '../../common/mixins/locale';\nvar COMPONENT_NAME = 'cube-segment-picker';\nvar EVENT_NEXT = 'next';\nvar EVENT_PREV = 'prev';\nvar EVENT_SELECT = 'select';\nvar EVENT_CANCEL = 'cancel';\nvar EVENT_CHANGE = 'change';\nexport default {\n  name: COMPONENT_NAME,\n  mixins: [visibilityMixin, popupMixin, pickerMixin, localeMixin],\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    nextTxt: {\n      type: String,\n      default: ''\n    },\n    prevTxt: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      current: 0,\n      selectedVal: [],\n      selectedIndex: [],\n      selectedText: []\n    };\n  },\n  computed: {\n    currentPicker: function currentPicker() {\n      // $refs is not reactive, should not use to computed or watch, so we import this.data to responsive.\n      for (var i = 0; i < this.data.length; i++) {\n        var item = this.$refs.pickers[i];\n\n        if (item.$attrs.index === this.current) {\n          return item;\n        }\n      }\n    },\n    _nextTxt: function _nextTxt() {\n      return this.nextTxt || this.$t('next');\n    },\n    _prevTxt: function _prevTxt() {\n      return this.prevTxt || this.$t('prev');\n    }\n  },\n  watch: {\n    data: function data() {\n      this.current = 0;\n      this.selectedVal = [];\n      this.selectedIndex = [];\n      this.selectedText = [];\n    }\n  },\n  methods: {\n    show: function show() {\n      if (this.isVisible || !this.data.length) {\n        return;\n      }\n\n      this.currentPicker.show();\n    },\n    hide: function hide() {\n      if (!this.isVisible || !this.data.length) {\n        return;\n      }\n\n      this.$refs.currentPicker.hide();\n    },\n    _select: function _select() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.selectedVal[this.current] = args[0];\n      this.selectedIndex[this.current] = args[1];\n      this.selectedText[this.current] = args[2];\n\n      if (this.current < this.data.length - 1) {\n        this.$emit.apply(this, [EVENT_NEXT, this.current].concat(args));\n        this.current++;\n        this.currentPicker.show();\n      } else {\n        this.$emit(EVENT_SELECT, this.selectedVal, this.selectedIndex, this.selectedText);\n        this.current = 0;\n      }\n    },\n    _cancel: function _cancel() {\n      if (this.current > 0) {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        this.$emit.apply(this, [EVENT_PREV, this.current].concat(args));\n        this.current--;\n        this.currentPicker.show();\n      } else {\n        this.$emit(EVENT_CANCEL);\n      }\n    },\n    _change: function _change() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this.$emit.apply(this, [EVENT_CHANGE, this.current].concat(args));\n    }\n  }\n};",{"version":3,"sources":["segment-picker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,eAAA,MAAA,gCAAA;AACA,OAAA,UAAA,MAAA,2BAAA;AACA,OAAA,WAAA,MAAA,4BAAA;AACA,OAAA,WAAA,MAAA,4BAAA;AAEA,IAAA,cAAA,GAAA,qBAAA;AACA,IAAA,UAAA,GAAA,MAAA;AACA,IAAA,UAAA,GAAA,MAAA;AACA,IAAA,YAAA,GAAA,QAAA;AACA,IAAA,YAAA,GAAA,QAAA;AACA,IAAA,YAAA,GAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,EAAA,WAAA,EAAA,WAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,EAAA;AACA;AAJA,KADA;AAOA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAPA;AAWA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAXA,GAHA;AAmBA,EAAA,IAnBA,kBAmBA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,CADA;AAEA,MAAA,WAAA,EAAA,EAFA;AAGA,MAAA,aAAA,EAAA,EAHA;AAIA,MAAA,YAAA,EAAA;AAJA,KAAA;AAMA,GA1BA;AA2BA,EAAA,QAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,IAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CAAA;;AACA,YAAA,IAAA,CAAA,MAAA,CAAA,KAAA,KAAA,KAAA,OAAA,EAAA;AACA,iBAAA,IAAA;AACA;AACA;AACA,KATA;AAUA,IAAA,QAVA,sBAUA;AACA,aAAA,KAAA,OAAA,IAAA,KAAA,EAAA,CAAA,MAAA,CAAA;AACA,KAZA;AAaA,IAAA,QAbA,sBAaA;AACA,aAAA,KAAA,OAAA,IAAA,KAAA,EAAA,CAAA,MAAA,CAAA;AACA;AAfA,GA3BA;AA4CA,EAAA,KAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,OAAA,GAAA,CAAA;AACA,WAAA,WAAA,GAAA,EAAA;AACA,WAAA,aAAA,GAAA,EAAA;AACA,WAAA,YAAA,GAAA,EAAA;AACA;AANA,GA5CA;AAoDA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,UAAA,KAAA,SAAA,IAAA,CAAA,KAAA,IAAA,CAAA,MAAA,EAAA;AACA;AACA;;AACA,WAAA,aAAA,CAAA,IAAA;AACA,KANA;AAOA,IAAA,IAPA,kBAOA;AACA,UAAA,CAAA,KAAA,SAAA,IAAA,CAAA,KAAA,IAAA,CAAA,MAAA,EAAA;AACA;AACA;;AACA,WAAA,KAAA,CAAA,aAAA,CAAA,IAAA;AACA,KAZA;AAaA,IAAA,OAbA,qBAaA;AAAA,wCAAA,IAAA;AAAA,QAAA,IAAA;AAAA;;AACA,WAAA,WAAA,CAAA,KAAA,OAAA,IAAA,IAAA,CAAA,CAAA,CAAA;AACA,WAAA,aAAA,CAAA,KAAA,OAAA,IAAA,IAAA,CAAA,CAAA,CAAA;AACA,WAAA,YAAA,CAAA,KAAA,OAAA,IAAA,IAAA,CAAA,CAAA,CAAA;;AAEA,UAAA,KAAA,OAAA,GAAA,KAAA,IAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,KAAA,cAAA,UAAA,EAAA,KAAA,OAAA,SAAA,IAAA;AACA,aAAA,OAAA;AACA,aAAA,aAAA,CAAA,IAAA;AACA,OAJA,MAIA;AACA,aAAA,KAAA,CAAA,YAAA,EAAA,KAAA,WAAA,EAAA,KAAA,aAAA,EAAA,KAAA,YAAA;AACA,aAAA,OAAA,GAAA,CAAA;AACA;AACA,KA1BA;AA2BA,IAAA,OA3BA,qBA2BA;AACA,UAAA,KAAA,OAAA,GAAA,CAAA,EAAA;AAAA,2CADA,IACA;AADA,UAAA,IACA;AAAA;;AACA,aAAA,KAAA,cAAA,UAAA,EAAA,KAAA,OAAA,SAAA,IAAA;AACA,aAAA,OAAA;AACA,aAAA,aAAA,CAAA,IAAA;AACA,OAJA,MAIA;AACA,aAAA,KAAA,CAAA,YAAA;AACA;AACA,KAnCA;AAoCA,IAAA,OApCA,qBAoCA;AAAA,yCAAA,IAAA;AAAA,QAAA,IAAA;AAAA;;AACA,WAAA,KAAA,cAAA,YAAA,EAAA,KAAA,OAAA,SAAA,IAAA;AACA;AAtCA;AApDA,CAAA","sourcesContent":["<template>\n  <div class=\"cube-segment-picker\">\n    <!-- Direct props will recover the property from v-bind Object expect 'is'. -->\n    <!-- To ensure the priority of v-bind Object which is from user configure, we check the property of item in every prop. -->\n    <component\n      v-for=\"(item, index) in data\"\n      :key=\"index\"\n      :index=\"index\"\n      ref=\"pickers\"\n      :is=\"item.is || 'cube-picker'\"\n      :title=\"item.title || title\"\n      :subtitle=\"item.subtitle || subtitle\"\n      :confirm-txt=\"item.confirmTxt || (index === data.length - 1 ? _confirmTxt : _nextTxt)\"\n      :cancel-txt=\"item.cancelTxt || (index === 0 ? _cancelTxt : _prevTxt)\"\n      :swipe-time=\"item.swipeTime || swipeTime\"\n      :z-index=\"item.zIndex || zIndex\"\n      :mask-closable=\"maskClosable\"\n      v-bind=\"item\"\n      @select=\"_select\"\n      @cancel=\"_cancel\"\n      @change=\"_change\">\n    </component>\n  </div>\n</template>\n\n<script>\n  import visibilityMixin from '../../common/mixins/visibility'\n  import popupMixin from '../../common/mixins/popup'\n  import pickerMixin from '../../common/mixins/picker'\n  import localeMixin from '../../common/mixins/locale'\n\n  const COMPONENT_NAME = 'cube-segment-picker'\n  const EVENT_NEXT = 'next'\n  const EVENT_PREV = 'prev'\n  const EVENT_SELECT = 'select'\n  const EVENT_CANCEL = 'cancel'\n  const EVENT_CHANGE = 'change'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [visibilityMixin, popupMixin, pickerMixin, localeMixin],\n    props: {\n      data: {\n        type: Array,\n        default() {\n          return []\n        }\n      },\n      nextTxt: {\n        type: String,\n        default: ''\n      },\n      prevTxt: {\n        type: String,\n        default: ''\n      }\n    },\n    data() {\n      return {\n        current: 0,\n        selectedVal: [],\n        selectedIndex: [],\n        selectedText: []\n      }\n    },\n    computed: {\n      currentPicker () {\n        // $refs is not reactive, should not use to computed or watch, so we import this.data to responsive.\n        for (let i = 0; i < this.data.length; i++) {\n          let item = this.$refs.pickers[i]\n          if (item.$attrs.index === this.current) {\n            return item\n          }\n        }\n      },\n      _nextTxt () {\n        return this.nextTxt || this.$t('next')\n      },\n      _prevTxt () {\n        return this.prevTxt || this.$t('prev')\n      }\n    },\n    watch: {\n      data() {\n        this.current = 0\n        this.selectedVal = []\n        this.selectedIndex = []\n        this.selectedText = []\n      }\n    },\n    methods: {\n      show() {\n        if (this.isVisible || !this.data.length) {\n          return\n        }\n        this.currentPicker.show()\n      },\n      hide() {\n        if (!this.isVisible || !this.data.length) {\n          return\n        }\n        this.$refs.currentPicker.hide()\n      },\n      _select(...args) {\n        this.selectedVal[this.current] = args[0]\n        this.selectedIndex[this.current] = args[1]\n        this.selectedText[this.current] = args[2]\n\n        if (this.current < this.data.length - 1) {\n          this.$emit(EVENT_NEXT, this.current, ...args)\n          this.current++\n          this.currentPicker.show()\n        } else {\n          this.$emit(EVENT_SELECT, this.selectedVal, this.selectedIndex, this.selectedText)\n          this.current = 0\n        }\n      },\n      _cancel(...args) {\n        if (this.current > 0) {\n          this.$emit(EVENT_PREV, this.current, ...args)\n          this.current--\n          this.currentPicker.show()\n        } else {\n          this.$emit(EVENT_CANCEL)\n        }\n      },\n      _change(...args) {\n        this.$emit(EVENT_CHANGE, this.current, ...args)\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"node_modules/cube-ui/src/components/segment-picker"}]}