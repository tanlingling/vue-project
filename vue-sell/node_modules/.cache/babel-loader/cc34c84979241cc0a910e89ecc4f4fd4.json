{"remainingRequest":"/Users/tanlingling/git/vue-sell/node_modules/thread-loader/dist/cjs.js!/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js??ref--30-2!/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/common/helpers/validator/types.js","dependencies":[{"path":"/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/common/helpers/validator/types.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Array$isArray from \"/Users/tanlingling/git/vue-sell/node_modules/@babel/runtime-corejs2/core-js/array/is-array\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { createAddAPI } from '../util';\nvar DATE_RE = /^(1|2)\\d{3}[.\\-/]\\d{1,2}[.\\-/]\\d{1,2}$/;\nvar types = {\n  string: function string(val) {\n    return typeof val === 'string';\n  },\n  number: function number(val) {\n    return !isNaN(Number(val));\n  },\n  array: function array(val) {\n    return _Array$isArray(val);\n  },\n  date: function date(val) {\n    return !isNaN(Number(val)) || DATE_RE.test(val);\n  },\n  email: function email(val) {\n    return typeof val === 'string' && /^[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)+$/i.test(val);\n  },\n  tel: function tel(val) {\n    return typeof val === 'string' && /^(11|13|14|15|17|18|19)[0-9]{9}$/.test(val);\n  },\n  url: function url(val) {\n    return typeof val === 'string' && /(https?|ftp|file):\\/\\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]/.test(val);\n  }\n};\nvar addType = createAddAPI(types);\nexport { types, addType };",{"version":3,"sources":["/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/common/helpers/validator/types.js"],"names":["createAddAPI","DATE_RE","types","string","val","number","isNaN","Number","array","date","test","email","tel","url","addType"],"mappings":";;AAAA,SAASA,YAAT,QAA6B,SAA7B;AAEA,IAAMC,OAAO,GAAG,wCAAhB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE,gBAACC,GAAD,EAAS;AACf,WAAO,OAAOA,GAAP,KAAe,QAAtB;AACD,GAHW;AAIZC,EAAAA,MAAM,EAAE,gBAACD,GAAD,EAAS;AACf,WAAO,CAACE,KAAK,CAACC,MAAM,CAACH,GAAD,CAAP,CAAb;AACD,GANW;AAOZI,EAAAA,KAAK,EAAE,eAACJ,GAAD,EAAS;AACd,WAAO,eAAcA,GAAd,CAAP;AACD,GATW;AAUZK,EAAAA,IAAI,EAAE,cAACL,GAAD,EAAS;AACb,WAAO,CAACE,KAAK,CAACC,MAAM,CAACH,GAAD,CAAP,CAAN,IAAuBH,OAAO,CAACS,IAAR,CAAaN,GAAb,CAA9B;AACD,GAZW;AAaZO,EAAAA,KAAK,EAAE,eAACP,GAAD,EAAS;AACd,WAAO,OAAOA,GAAP,KAAe,QAAf,IAA2B,6CAA6CM,IAA7C,CAAkDN,GAAlD,CAAlC;AACD,GAfW;AAgBZQ,EAAAA,GAAG,EAAE,aAACR,GAAD,EAAS;AACZ,WAAO,OAAOA,GAAP,KAAe,QAAf,IAA2B,mCAAmCM,IAAnC,CAAwCN,GAAxC,CAAlC;AACD,GAlBW;AAmBZS,EAAAA,GAAG,EAAE,aAACT,GAAD,EAAS;AACZ,WAAO,OAAOA,GAAP,KAAe,QAAf,IAA2B,4EAA4EM,IAA5E,CAAiFN,GAAjF,CAAlC;AACD;AArBW,CAAd;AAwBA,IAAMU,OAAO,GAAGd,YAAY,CAACE,KAAD,CAA5B;AAEA,SAASA,KAAT,EAAgBY,OAAhB","sourcesContent":["import { createAddAPI } from '../util'\n\nconst DATE_RE = /^(1|2)\\d{3}[.\\-/]\\d{1,2}[.\\-/]\\d{1,2}$/\n\nconst types = {\n  string: (val) => {\n    return typeof val === 'string'\n  },\n  number: (val) => {\n    return !isNaN(Number(val))\n  },\n  array: (val) => {\n    return Array.isArray(val)\n  },\n  date: (val) => {\n    return !isNaN(Number(val)) || DATE_RE.test(val)\n  },\n  email: (val) => {\n    return typeof val === 'string' && /^[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)+$/i.test(val)\n  },\n  tel: (val) => {\n    return typeof val === 'string' && /^(11|13|14|15|17|18|19)[0-9]{9}$/.test(val)\n  },\n  url: (val) => {\n    return typeof val === 'string' && /(https?|ftp|file):\\/\\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]/.test(val)\n  }\n}\n\nconst addType = createAddAPI(types)\n\nexport { types, addType }\n"]}]}