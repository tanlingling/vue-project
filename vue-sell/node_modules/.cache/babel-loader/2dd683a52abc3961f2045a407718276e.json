{"remainingRequest":"/Users/tanlingling/git/vue-sell/node_modules/thread-loader/dist/cjs.js!/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js??ref--30-2!/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/common/mixins/visibility.js","dependencies":[{"path":"/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/common/mixins/visibility.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var EVENT_TOGGLE = 'toggle';\nexport default {\n  model: {\n    prop: 'visible',\n    event: EVENT_TOGGLE\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      // If use the prop visible directly, the toggle will failed when user haven't set v-model as a reactive property.\n      // So we use the data isVisible instead.\n      isVisible: false\n    };\n  },\n  watch: {\n    isVisible: function isVisible(newVal) {\n      this.$emit(EVENT_TOGGLE, newVal);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$watch('visible', function (newVal, oldVal) {\n      if (newVal) {\n        _this.show();\n      } else if (oldVal && !_this._createAPI_reuse) {\n        _this.hide();\n      }\n    }, {\n      immediate: true\n    });\n  },\n  methods: {\n    show: function show() {\n      this.isVisible = true;\n    },\n    hide: function hide() {\n      this.isVisible = false;\n    }\n  }\n};",{"version":3,"sources":["/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/common/mixins/visibility.js"],"names":["EVENT_TOGGLE","model","prop","event","props","visible","type","Boolean","default","data","isVisible","watch","newVal","$emit","mounted","$watch","oldVal","show","_createAPI_reuse","hide","immediate","methods"],"mappings":"AAAA,IAAMA,YAAY,GAAG,QAArB;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,SADD;AAELC,IAAAA,KAAK,EAAEH;AAFF,GADM;AAKbI,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEC,OADC;AAEPC,MAAAA,OAAO,EAAE;AAFF;AADJ,GALM;AAWbC,EAAAA,IAXa,kBAWN;AACL,WAAO;AACL;AACA;AACAC,MAAAA,SAAS,EAAE;AAHN,KAAP;AAKD,GAjBY;AAkBbC,EAAAA,KAAK,EAAE;AACLD,IAAAA,SADK,qBACKE,MADL,EACa;AAChB,WAAKC,KAAL,CAAWb,YAAX,EAAyBY,MAAzB;AACD;AAHI,GAlBM;AAuBbE,EAAAA,OAvBa,qBAuBH;AAAA;;AACR,SAAKC,MAAL,CAAY,SAAZ,EAAuB,UAACH,MAAD,EAASI,MAAT,EAAoB;AACzC,UAAIJ,MAAJ,EAAY;AACV,QAAA,KAAI,CAACK,IAAL;AACD,OAFD,MAEO,IAAID,MAAM,IAAI,CAAC,KAAI,CAACE,gBAApB,EAAsC;AAC3C,QAAA,KAAI,CAACC,IAAL;AACD;AACF,KAND,EAMG;AACDC,MAAAA,SAAS,EAAE;AADV,KANH;AASD,GAjCY;AAkCbC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,IADO,kBACA;AACL,WAAKP,SAAL,GAAiB,IAAjB;AACD,KAHM;AAIPS,IAAAA,IAJO,kBAIA;AACL,WAAKT,SAAL,GAAiB,KAAjB;AACD;AANM;AAlCI,CAAf","sourcesContent":["const EVENT_TOGGLE = 'toggle'\n\nexport default {\n  model: {\n    prop: 'visible',\n    event: EVENT_TOGGLE\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      // If use the prop visible directly, the toggle will failed when user haven't set v-model as a reactive property.\n      // So we use the data isVisible instead.\n      isVisible: false\n    }\n  },\n  watch: {\n    isVisible(newVal) {\n      this.$emit(EVENT_TOGGLE, newVal)\n    }\n  },\n  mounted() {\n    this.$watch('visible', (newVal, oldVal) => {\n      if (newVal) {\n        this.show()\n      } else if (oldVal && !this._createAPI_reuse) {\n        this.hide()\n      }\n    }, {\n      immediate: true\n    })\n  },\n  methods: {\n    show() {\n      this.isVisible = true\n    },\n    hide() {\n      this.isVisible = false\n    }\n  }\n}\n"]}]}