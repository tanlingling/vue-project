{"remainingRequest":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js??ref--30-1!/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/common/mixins/basic-picker.js","dependencies":[{"path":"/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/common/mixins/basic-picker.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var DEFAULT_KEYS = {\n  value: 'value',\n  text: 'text'\n};\nexport default {\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    selectedIndex: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    alias: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  computed: {\n    valueKey: function valueKey() {\n      return this.alias.value || DEFAULT_KEYS.value;\n    },\n    textKey: function textKey() {\n      return this.alias.text || DEFAULT_KEYS.text;\n    },\n    merge: function merge() {\n      return [this.data, this.selectedIndex];\n    }\n  },\n  watch: {\n    // Merge the watch handlers of data and selectedIndex into one.\n    merge: function merge(newVal) {\n      this.setData(newVal[0], newVal[1]);\n    }\n  }\n};",{"version":3,"sources":["/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/common/mixins/basic-picker.js"],"names":["DEFAULT_KEYS","value","text","props","data","type","Array","default","selectedIndex","alias","Object","computed","valueKey","textKey","merge","watch","newVal","setData"],"mappings":"AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,OADY;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEC,KADF;AAEJC,MAAAA,OAFI,sBAEM;AACR,eAAO,EAAP;AACD;AAJG,KADD;AAOLC,IAAAA,aAAa,EAAE;AACbH,MAAAA,IAAI,EAAEC,KADO;AAEbC,MAAAA,OAFa,sBAEH;AACR,eAAO,EAAP;AACD;AAJY,KAPV;AAaLE,IAAAA,KAAK,EAAE;AACLJ,MAAAA,IAAI,EAAEK,MADD;AAELH,MAAAA,OAFK,sBAEK;AACR,eAAO,EAAP;AACD;AAJI;AAbF,GADM;AAqBbI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QADQ,sBACG;AACT,aAAO,KAAKH,KAAL,CAAWR,KAAX,IAAoBD,YAAY,CAACC,KAAxC;AACD,KAHO;AAIRY,IAAAA,OAJQ,qBAIE;AACR,aAAO,KAAKJ,KAAL,CAAWP,IAAX,IAAmBF,YAAY,CAACE,IAAvC;AACD,KANO;AAORY,IAAAA,KAPQ,mBAOA;AACN,aAAO,CAAC,KAAKV,IAAN,EAAY,KAAKI,aAAjB,CAAP;AACD;AATO,GArBG;AAgCbO,EAAAA,KAAK,EAAE;AACL;AACAD,IAAAA,KAFK,iBAECE,MAFD,EAES;AACZ,WAAKC,OAAL,CAAaD,MAAM,CAAC,CAAD,CAAnB,EAAwBA,MAAM,CAAC,CAAD,CAA9B;AACD;AAJI;AAhCM,CAAf","sourcesContent":["const DEFAULT_KEYS = {\n  value: 'value',\n  text: 'text'\n}\n\nexport default {\n  props: {\n    data: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    selectedIndex: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    alias: {\n      type: Object,\n      default() {\n        return {}\n      }\n    }\n  },\n  computed: {\n    valueKey() {\n      return this.alias.value || DEFAULT_KEYS.value\n    },\n    textKey() {\n      return this.alias.text || DEFAULT_KEYS.text\n    },\n    merge() {\n      return [this.data, this.selectedIndex]\n    }\n  },\n  watch: {\n    // Merge the watch handlers of data and selectedIndex into one.\n    merge(newVal) {\n      this.setData(newVal[0], newVal[1])\n    }\n  }\n}\n"]}]}