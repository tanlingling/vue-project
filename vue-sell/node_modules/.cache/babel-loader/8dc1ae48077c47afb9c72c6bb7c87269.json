{"remainingRequest":"/Users/tanlingling/Desktop/sell/node_modules/babel-loader/lib/index.js??ref--30-1!/Users/tanlingling/Desktop/sell/node_modules/cube-ui/src/common/helpers/string-template.js","dependencies":[{"path":"/Users/tanlingling/Desktop/sell/node_modules/cube-ui/src/common/helpers/string-template.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport { isFunc } from './util';\nimport { warn } from './debug';\nimport Locale from '../../modules/locale';\nvar stringRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar quoteRe = /['\"]/g;\nvar INVALID_INDEX = -1;\n\nfunction format(string) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return string.replace(stringRE, function (match, group1, index) {\n    var helpersArr = group1.split('|').slice(1).map(function (_) {\n      return _.trim();\n    });\n    var hasHelpers = helpersArr.length;\n    var result = config;\n\n    if (hasHelpers) {\n      helpersArr.forEach(function (helperString) {\n        var _resolveHelperFnStrin = resolveHelperFnString(helperString),\n            fnName = _resolveHelperFnStrin.fnName,\n            args = _resolveHelperFnStrin.args;\n\n        args.unshift(result);\n        /* istanbul ignore else */\n\n        if (isFunc(Locale.helpers[fnName])) {\n          result = Locale.helpers[fnName].apply(null, args);\n        } else {\n          warn(\"A helper function named \\\"\".concat(fnName, \"\\\" is not registered, \") + \"please register it by Validator.addHelper()\");\n          result = '';\n        }\n      });\n    }\n\n    return result;\n  });\n}\n\nfunction resolveHelperFnString(helperString) {\n  var leftBracketsIndex = helperString.indexOf('(');\n  var rightBracketsIndex = helperString.indexOf(')');\n  var fnName = '';\n  var args = [];\n  /* istanbul ignore if */\n\n  if (leftBracketsIndex === INVALID_INDEX) {\n    args = [];\n    fnName = helperString;\n  } else if (leftBracketsIndex !== INVALID_INDEX && rightBracketsIndex !== INVALID_INDEX) {\n    var argsStr = helperString.slice(leftBracketsIndex + 1, rightBracketsIndex);\n    args = argsStr.split(',').map(function (_) {\n      return _.trim().replace(quoteRe, '');\n    });\n    fnName = helperString.slice(0, leftBracketsIndex);\n  }\n\n  return {\n    fnName: fnName,\n    args: args\n  };\n}\n\nexport default format;",{"version":3,"sources":["/Users/tanlingling/Desktop/sell/node_modules/cube-ui/src/common/helpers/string-template.js"],"names":["isFunc","warn","Locale","stringRE","quoteRe","INVALID_INDEX","format","string","config","replace","match","group1","index","helpersArr","split","slice","map","_","trim","hasHelpers","length","result","forEach","helperString","resolveHelperFnString","fnName","args","unshift","helpers","apply","leftBracketsIndex","indexOf","rightBracketsIndex","argsStr"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,IAAMC,QAAQ,GAAG,uBAAjB;AACA,IAAMC,OAAO,GAAG,OAAhB;AACA,IAAMC,aAAa,GAAG,CAAC,CAAvB;;AAEA,SAASC,MAAT,CAAiBC,MAAjB,EAAsC;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AACpC,SAAOD,MAAM,CAACE,OAAP,CAAeN,QAAf,EAAyB,UAACO,KAAD,EAAQC,MAAR,EAAgBC,KAAhB,EAA0B;AACxD,QAAMC,UAAU,GAAGF,MAAM,CAACG,KAAP,CAAa,GAAb,EAAkBC,KAAlB,CAAwB,CAAxB,EAA2BC,GAA3B,CAA+B,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,KAAhC,CAAnB;AACA,QAAMC,UAAU,GAAGN,UAAU,CAACO,MAA9B;AACA,QAAIC,MAAM,GAAGb,MAAb;;AAEA,QAAIW,UAAJ,EAAgB;AACdN,MAAAA,UAAU,CAACS,OAAX,CAAmB,UAACC,YAAD,EAAkB;AAAA,oCACZC,qBAAqB,CAACD,YAAD,CADT;AAAA,YAC7BE,MAD6B,yBAC7BA,MAD6B;AAAA,YACrBC,IADqB,yBACrBA,IADqB;;AAEnCA,QAAAA,IAAI,CAACC,OAAL,CAAaN,MAAb;AACA;;AACA,YAAIrB,MAAM,CAACE,MAAM,CAAC0B,OAAP,CAAeH,MAAf,CAAD,CAAV,EAAoC;AAClCJ,UAAAA,MAAM,GAAGnB,MAAM,CAAC0B,OAAP,CAAeH,MAAf,EAAuBI,KAAvB,CAA6B,IAA7B,EAAmCH,IAAnC,CAAT;AACD,SAFD,MAEO;AACLzB,UAAAA,IAAI,CAAC,oCAA4BwB,MAA5B,2EAAD,CAAJ;AAEAJ,UAAAA,MAAM,GAAG,EAAT;AACD;AACF,OAXD;AAYD;;AAED,WAAOA,MAAP;AACD,GArBM,CAAP;AAsBD;;AAED,SAASG,qBAAT,CAAgCD,YAAhC,EAA8C;AAC5C,MAAMO,iBAAiB,GAAGP,YAAY,CAACQ,OAAb,CAAqB,GAArB,CAA1B;AACA,MAAMC,kBAAkB,GAAGT,YAAY,CAACQ,OAAb,CAAqB,GAArB,CAA3B;AACA,MAAIN,MAAM,GAAG,EAAb;AACA,MAAIC,IAAI,GAAG,EAAX;AACA;;AACA,MAAII,iBAAiB,KAAKzB,aAA1B,EAAyC;AACvCqB,IAAAA,IAAI,GAAG,EAAP;AACAD,IAAAA,MAAM,GAAGF,YAAT;AACD,GAHD,MAGO,IAAIO,iBAAiB,KAAKzB,aAAtB,IAAuC2B,kBAAkB,KAAK3B,aAAlE,EAAiF;AACtF,QAAM4B,OAAO,GAAGV,YAAY,CAACR,KAAb,CAAmBe,iBAAiB,GAAG,CAAvC,EAA0CE,kBAA1C,CAAhB;AACAN,IAAAA,IAAI,GAAGO,OAAO,CAACnB,KAAR,CAAc,GAAd,EAAmBE,GAAnB,CAAuB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,GAAST,OAAT,CAAiBL,OAAjB,EAA0B,EAA1B,CAAJ;AAAA,KAAxB,CAAP;AACAqB,IAAAA,MAAM,GAAGF,YAAY,CAACR,KAAb,CAAmB,CAAnB,EAAsBe,iBAAtB,CAAT;AACD;;AACD,SAAO;AAAEL,IAAAA,MAAM,EAANA,MAAF;AAAUC,IAAAA,IAAI,EAAJA;AAAV,GAAP;AACD;;AAED,eAAepB,MAAf","sourcesContent":["import { isFunc } from './util'\nimport { warn } from './debug'\nimport Locale from '../../modules/locale'\nconst stringRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g\nconst quoteRe = /['\"]/g\nconst INVALID_INDEX = -1\n\nfunction format (string, config = '') {\n  return string.replace(stringRE, (match, group1, index) => {\n    const helpersArr = group1.split('|').slice(1).map(_ => _.trim())\n    const hasHelpers = helpersArr.length\n    let result = config\n\n    if (hasHelpers) {\n      helpersArr.forEach((helperString) => {\n        let { fnName, args } = resolveHelperFnString(helperString)\n        args.unshift(result)\n        /* istanbul ignore else */\n        if (isFunc(Locale.helpers[fnName])) {\n          result = Locale.helpers[fnName].apply(null, args)\n        } else {\n          warn(`A helper function named \"${fnName}\" is not registered, ` +\n               `please register it by Validator.addHelper()`)\n          result = ''\n        }\n      })\n    }\n\n    return result\n  })\n}\n\nfunction resolveHelperFnString (helperString) {\n  const leftBracketsIndex = helperString.indexOf('(')\n  const rightBracketsIndex = helperString.indexOf(')')\n  let fnName = ''\n  let args = []\n  /* istanbul ignore if */\n  if (leftBracketsIndex === INVALID_INDEX) {\n    args = []\n    fnName = helperString\n  } else if (leftBracketsIndex !== INVALID_INDEX && rightBracketsIndex !== INVALID_INDEX) {\n    const argsStr = helperString.slice(leftBracketsIndex + 1, rightBracketsIndex)\n    args = argsStr.split(',').map(_ => _.trim().replace(quoteRe, ''))\n    fnName = helperString.slice(0, leftBracketsIndex)\n  }\n  return { fnName, args }\n}\n\nexport default format\n"]}]}