{"remainingRequest":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/components/scroll-nav-bar/scroll-nav-bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/components/scroll-nav-bar/scroll-nav-bar.vue","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport scrollMixin from '../../common/mixins/scroll';\nimport CubeScroll from '../scroll/scroll.vue';\nvar DIRECTION_H = 'horizontal';\nvar DIRECTION_V = 'vertical';\nvar COMPONENT_NAME = 'cube-scroll-nav-bar';\nvar EVENT_CHANGE = 'change';\nexport default {\n  name: COMPONENT_NAME,\n  inject: {\n    scrollNav: {\n      default: null\n    }\n  },\n  mixins: [scrollMixin],\n  props: {\n    direction: {\n      type: String,\n      default: DIRECTION_H,\n      validator: function validator(val) {\n        return val === DIRECTION_H || val === DIRECTION_V;\n      }\n    },\n    labels: {\n      type: Array,\n      default: function _default() {\n        /* istanbul ignore next */\n        return [];\n      }\n    },\n    txts: {\n      type: Array,\n      default: function _default() {\n        /* istanbul ignore next */\n        return this.labels;\n      }\n    },\n    current: {\n      type: [String, Number],\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      active: this.current\n    };\n  },\n  watch: {\n    current: function current(newVal) {\n      this.active = newVal;\n    },\n    active: function active(newVal) {\n      this.$emit(EVENT_CHANGE, newVal);\n\n      this._adjust();\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.scrollNav && this.scrollNav.setBar(this);\n\n    if (this.active) {\n      // waiting panels loaded\n      this.$nextTick(function () {\n        _this._adjust();\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.scrollNav && this.scrollNav.setBar(null);\n  },\n  methods: {\n    clickHandler: function clickHandler(label) {\n      if (label === this.active) {\n        return;\n      }\n\n      this.active = label;\n      this.scrollNav && this.scrollNav.barChange(label);\n    },\n    refresh: function refresh() {\n      this.$refs.scroll.refresh();\n\n      this._adjust();\n    },\n    _adjust: function _adjust() {\n      var _this2 = this;\n\n      // waiting ui\n      this.$nextTick(function () {\n        var isHorizontal = _this2.direction === DIRECTION_H;\n        var targetProp = isHorizontal ? 'clientWidth' : 'clientHeight';\n        var active = _this2.active;\n        var viewportSize = _this2.$refs.scroll.$el[targetProp];\n        var itemsEle = _this2.$refs.items;\n        var scrollerSize = itemsEle[targetProp];\n        var minTranslate = Math.min(0, viewportSize - scrollerSize);\n        var middleTranslate = viewportSize / 2;\n        var items = itemsEle.children;\n        var size = 0;\n\n        _this2.labels.every(function (label, index) {\n          if (label === active) {\n            size += items[index][targetProp] / 2;\n            return false;\n          }\n\n          size += items[index][targetProp];\n          return true;\n        });\n\n        var translate = middleTranslate - size;\n        translate = Math.max(minTranslate, Math.min(0, translate));\n\n        _this2.$refs.scroll.scrollTo(isHorizontal ? translate : 0, isHorizontal ? 0 : translate, 300);\n      });\n    }\n  },\n  components: {\n    CubeScroll: CubeScroll\n  }\n};",{"version":3,"sources":["scroll-nav-bar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"cube-scroll-nav-bar\" :class=\"'cube-scroll-nav-bar_' + direction\">\n    <cube-scroll\n      ref=\"scroll\"\n      nestMode=\"none\"\n      :options=\"options\"\n      :direction=\"direction\">\n      <div class=\"cube-scroll-nav-bar-items\" ref=\"items\">\n        <div\n          class=\"cube-scroll-nav-bar-item\"\n          v-for=\"(txt, index) in txts\"\n          :key=\"index\"\n          :class=\"{'cube-scroll-nav-bar-item_active': active === labels[index]}\"\n          @click=\"clickHandler(labels[index])\">\n          <slot\n            :txt=\"txt\"\n            :index=\"index\"\n            :active=\"active\"\n            :label=\"labels[index]\">\n              <span v-html=\"txt\"></span>\n            </slot>\n        </div>\n      </div>\n    </cube-scroll>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import scrollMixin from '../../common/mixins/scroll'\n  import CubeScroll from '../scroll/scroll.vue'\n\n  const DIRECTION_H = 'horizontal'\n  const DIRECTION_V = 'vertical'\n\n  const COMPONENT_NAME = 'cube-scroll-nav-bar'\n  const EVENT_CHANGE = 'change'\n\n  export default {\n    name: COMPONENT_NAME,\n    inject: {\n      scrollNav: {\n        default: null\n      }\n    },\n    mixins: [scrollMixin],\n    props: {\n      direction: {\n        type: String,\n        default: DIRECTION_H,\n        validator(val) {\n          return val === DIRECTION_H || val === DIRECTION_V\n        }\n      },\n      labels: {\n        type: Array,\n        default() {\n          /* istanbul ignore next */\n          return []\n        }\n      },\n      txts: {\n        type: Array,\n        default() {\n          /* istanbul ignore next */\n          return this.labels\n        }\n      },\n      current: {\n        type: [String, Number],\n        default: ''\n      }\n    },\n    data() {\n      return {\n        active: this.current\n      }\n    },\n    watch: {\n      current(newVal) {\n        this.active = newVal\n      },\n      active(newVal) {\n        this.$emit(EVENT_CHANGE, newVal)\n        this._adjust()\n      }\n    },\n    mounted() {\n      this.scrollNav && this.scrollNav.setBar(this)\n      if (this.active) {\n        // waiting panels loaded\n        this.$nextTick(() => {\n          this._adjust()\n        })\n      }\n    },\n    beforeDestroy() {\n      this.scrollNav && this.scrollNav.setBar(null)\n    },\n    methods: {\n      clickHandler(label) {\n        if (label === this.active) {\n          return\n        }\n        this.active = label\n        this.scrollNav && this.scrollNav.barChange(label)\n      },\n      refresh() {\n        this.$refs.scroll.refresh()\n        this._adjust()\n      },\n      _adjust() {\n        // waiting ui\n        this.$nextTick(() => {\n          const isHorizontal = this.direction === DIRECTION_H\n          const targetProp = isHorizontal ? 'clientWidth' : 'clientHeight'\n          const active = this.active\n          const viewportSize = this.$refs.scroll.$el[targetProp]\n          const itemsEle = this.$refs.items\n          const scrollerSize = itemsEle[targetProp]\n          const minTranslate = Math.min(0, viewportSize - scrollerSize)\n          const middleTranslate = viewportSize / 2\n          const items = itemsEle.children\n          let size = 0\n          this.labels.every((label, index) => {\n            if (label === active) {\n              size += (items[index][targetProp] / 2)\n              return false\n            }\n            size += items[index][targetProp]\n            return true\n          })\n          let translate = middleTranslate - size\n          translate = Math.max(minTranslate, Math.min(0, translate))\n          this.$refs.scroll.scrollTo(isHorizontal ? translate : 0, isHorizontal ? 0 : translate, 300)\n        })\n      }\n    },\n    components: {\n      CubeScroll\n    }\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n\n  .cube-scroll-nav-bar\n    position: relative\n    display: flex\n    color: $scroll-nav-color\n    background-color: $scroll-nav-bgc\n  .cube-scroll-nav-bar_horizontal\n    align-items: center\n    .cube-scroll-wrapper\n      flex: 1\n      text-align: center\n    .cube-scroll-content\n      display: inline-block\n    .cube-scroll-nav-bar-items\n      white-space: nowrap\n  .cube-scroll-nav-bar_vertical\n    height: 100%\n    justify-content: center\n    text-align: center\n    .cube-scroll-nav-bar-item\n      display: block\n  .cube-scroll-nav-bar-items\n    font-size: $fontsize-medium\n  .cube-scroll-nav-bar-item\n    display: inline-block\n    padding: 20px 15px\n  .cube-scroll-nav-bar-item_active\n    color: $scroll-nav-active-color\n</style>\n"],"sourceRoot":"node_modules/cube-ui/src/components/scroll-nav-bar"}]}