{"remainingRequest":"/Users/tanlingling/Desktop/project-e/sell/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/tanlingling/Desktop/project-e/sell/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tanlingling/Desktop/project-e/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/Desktop/project-e/sell/node_modules/cube-ui/src/components/checker/checker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/cube-ui/src/components/checker/checker.vue","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CubeCheckerItem from './checker-item.vue';\nvar COMPONENT_NAME = 'cube-checker';\nvar EVENT_INPUT = 'input';\nexport default {\n  name: COMPONENT_NAME,\n  props: {\n    value: [String, Number, Array],\n    options: {\n      type: Array,\n      default: function _default() {\n        /* istanbul ignore next */\n        return [];\n      }\n    },\n    type: {\n      type: String,\n      default: 'checkbox'\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: function _default() {\n        return this.options.length;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      currentValue: this.value\n    };\n  },\n  computed: {\n    isRadio: function isRadio() {\n      return this.type === 'radio';\n    }\n  },\n  watch: {\n    value: function value(newValue) {\n      this.currentValue = newValue;\n    },\n    currentValue: function currentValue(val) {\n      this.$emit(EVENT_INPUT, val);\n    }\n  },\n  methods: {\n    check: function check(option) {\n      if (this.isRadio) {\n        this.checkRadio(option);\n      } else {\n        this.checkCheckbox(option);\n      }\n    },\n    checkRadio: function checkRadio(option) {\n      this.currentValue = option.value;\n    },\n    checkCheckbox: function checkCheckbox(option) {\n      var value = option.value;\n      var currentValue = this.currentValue;\n      var valueLen = currentValue.length;\n      var min = this.min;\n      var max = this.max;\n      var index = currentValue.indexOf(value);\n\n      if (index > -1) {\n        valueLen > min && currentValue.splice(index, 1);\n      } else {\n        valueLen < max && currentValue.push(value);\n      }\n    }\n  },\n  components: {\n    CubeCheckerItem: CubeCheckerItem\n  }\n};",{"version":3,"sources":["checker.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA,OAAA,eAAA,MAAA,oBAAA;AACA,IAAA,cAAA,GAAA,cAAA;AACA,IAAA,WAAA,GAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,KAAA,CADA;AAEA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAFA,sBAEA;AACA;AACA,eAAA,EAAA;AACA;AALA,KAFA;AASA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,KAAA,OAAA,CAAA,MAAA;AACA;AAJA;AAjBA,GAFA;AA0BA,EAAA,IA1BA,kBA0BA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,KAAA;AADA,KAAA;AAGA,GA9BA;AA+BA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,IAAA,KAAA,OAAA;AACA;AAHA,GA/BA;AAoCA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,QADA,EACA;AACA,WAAA,YAAA,GAAA,QAAA;AACA,KAHA;AAIA,IAAA,YAJA,wBAIA,GAJA,EAIA;AACA,WAAA,KAAA,CAAA,WAAA,EAAA,GAAA;AACA;AANA,GApCA;AA4CA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,iBACA,MADA,EACA;AACA,UAAA,KAAA,OAAA,EAAA;AACA,aAAA,UAAA,CAAA,MAAA;AACA,OAFA,MAEA;AACA,aAAA,aAAA,CAAA,MAAA;AACA;AACA,KAPA;AAQA,IAAA,UARA,sBAQA,MARA,EAQA;AACA,WAAA,YAAA,GAAA,MAAA,CAAA,KAAA;AACA,KAVA;AAWA,IAAA,aAXA,yBAWA,MAXA,EAWA;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,KAAA;AACA,UAAA,YAAA,GAAA,KAAA,YAAA;AACA,UAAA,QAAA,GAAA,YAAA,CAAA,MAAA;AACA,UAAA,GAAA,GAAA,KAAA,GAAA;AACA,UAAA,GAAA,GAAA,KAAA,GAAA;AAEA,UAAA,KAAA,GAAA,YAAA,CAAA,OAAA,CAAA,KAAA,CAAA;;AAEA,UAAA,KAAA,GAAA,CAAA,CAAA,EAAA;AACA,QAAA,QAAA,GAAA,GAAA,IAAA,YAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA,GAAA,GAAA,IAAA,YAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AACA;AACA;AAzBA,GA5CA;AAuEA,EAAA,UAAA,EAAA;AACA,IAAA,eAAA,EAAA;AADA;AAvEA,CAAA","sourcesContent":["<template>\n  <ul class=\"cube-checker\">\n    <slot>\n      <cube-checker-item\n        v-for=\"(option, index) in options\"\n        :option=\"option\"\n        :key=\"index\" />\n    </slot>\n  </ul>\n</template>\n<script type=\"text/ecmascript-6\">\n  import CubeCheckerItem from './checker-item.vue'\n  const COMPONENT_NAME = 'cube-checker'\n  const EVENT_INPUT = 'input'\n\n  export default {\n    name: COMPONENT_NAME,\n    props: {\n      value: [String, Number, Array],\n      options: {\n        type: Array,\n        default() {\n          /* istanbul ignore next */\n          return []\n        }\n      },\n      type: {\n        type: String,\n        default: 'checkbox'\n      },\n      min: {\n        type: Number,\n        default: 0\n      },\n      max: {\n        type: Number,\n        default() {\n          return this.options.length\n        }\n      }\n    },\n    data () {\n      return {\n        currentValue: this.value\n      }\n    },\n    computed: {\n      isRadio() {\n        return this.type === 'radio'\n      }\n    },\n    watch: {\n      value (newValue) {\n        this.currentValue = newValue\n      },\n      currentValue (val) {\n        this.$emit(EVENT_INPUT, val)\n      }\n    },\n    methods: {\n      check(option) {\n        if (this.isRadio) {\n          this.checkRadio(option)\n        } else {\n          this.checkCheckbox(option)\n        }\n      },\n      checkRadio(option) {\n        this.currentValue = option.value\n      },\n      checkCheckbox(option) {\n        const value = option.value\n        const currentValue = this.currentValue\n        const valueLen = currentValue.length\n        const min = this.min\n        const max = this.max\n\n        const index = currentValue.indexOf(value)\n\n        if (index > -1) {\n          (valueLen > min) && currentValue.splice(index, 1)\n        } else {\n          (valueLen < max) && currentValue.push(value)\n        }\n      }\n    },\n    components: {\n      CubeCheckerItem\n    }\n  }\n</script>\n"],"sourceRoot":"node_modules/cube-ui/src/components/checker"}]}