{"remainingRequest":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/components/scroll-nav/scroll-nav.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/components/scroll-nav/scroll-nav.vue","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport scrollMixin from '../../common/mixins/scroll';\nimport CubeSticky from '../sticky/sticky.vue';\nimport CubeStickyEle from '../sticky/sticky-ele.vue';\nimport CubeScroll from '../scroll/scroll.vue';\nimport CubeScrollNavBar from '../scroll-nav-bar/scroll-nav-bar.vue';\nvar DIRECTION_H = 'horizontal';\nvar DIRECTION_V = 'vertical';\nvar COMPONENT_NAME = 'cube-scroll-nav';\nvar EVENT_CHANGE = 'change';\nvar EVENT_STICKY_CHANGE = 'sticky-change';\nexport default {\n  name: COMPONENT_NAME,\n  provide: function provide() {\n    return {\n      scrollNav: this\n    };\n  },\n  mixins: [scrollMixin],\n  props: {\n    data: {\n      type: Array\n    },\n    speed: {\n      type: Number,\n      default: 300\n    },\n    side: {\n      type: Boolean,\n      default: false\n    },\n    current: {\n      type: [String, Number],\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      scrollEvents: ['scroll', 'scroll-end'],\n      scrollY: 0,\n      panels: [],\n      active: this.current,\n      pageStickyOffset: 0\n    };\n  },\n  computed: {\n    labels: function labels() {\n      return this.panels.map(function (panel) {\n        return panel.label;\n      });\n    },\n    barTxts: function barTxts() {\n      return this.panels.map(function (panel) {\n        return panel.title;\n      });\n    },\n    barDirection: function barDirection() {\n      return this.side ? DIRECTION_V : DIRECTION_H;\n    }\n  },\n  watch: {\n    current: function current(newVal) {\n      this.stickyCurrent = newVal;\n      this.active = newVal;\n      this.jumpTo(newVal);\n    },\n    active: function active(newVal) {\n      this.$emit(EVENT_CHANGE, newVal);\n    }\n  },\n  created: function created() {\n    this.navBar = null;\n    this.stickyCurrent = this.current;\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      if (_this.side) {\n        var fixedEle = _this.$refs.pageSticky.$refs.fixedEle;\n\n        _this.$refs.scroll.$el.appendChild(fixedEle);\n      }\n\n      if (!_this.current) {\n        _this.active = _this.stickyCurrent = _this.labels[0];\n      }\n\n      _this.refresh();\n\n      _this.jumpTo(_this.current);\n    });\n  },\n  methods: {\n    refresh: function refresh() {\n      this.navBar && this.navBar.refresh();\n      this.$refs.sticky.refresh();\n      this.$refs.pageSticky.refresh();\n      this.pageStickyOffset = this.side ? 0 : this.$refs.navBarEle.$el.offsetHeight;\n      this.$refs.scroll.refresh();\n    },\n    setBar: function setBar(bar) {\n      this.navBar = bar;\n    },\n    barChange: function barChange(label) {\n      var _this2 = this;\n\n      this.active = label; // waiting touchend\n      // so the inner scroll won't affect the touchend logic\n\n      this.$nextTick(function () {\n        _this2.jumpTo(label);\n      });\n    },\n    jumpTo: function jumpTo(label) {\n      if (!label) {\n        return;\n      }\n\n      var panel = this.getPanel(label);\n\n      if (panel) {\n        this._jumping = true;\n        var offset = this.pageStickyOffset;\n        this.$refs.scroll.scrollToElement(panel.$el, this.speed, 0, this.side ? offset : -offset);\n      }\n    },\n    getPanel: function getPanel(label) {\n      var panel = null;\n      this.panels.some(function (_panel) {\n        if (_panel.label === label) {\n          panel = _panel;\n          return true;\n        }\n      });\n      return panel;\n    },\n    pageStickyChangeHandler: function pageStickyChangeHandler(current) {\n      if (current === '') {\n        current = this.labels[0];\n      }\n\n      this.stickyCurrent = current;\n\n      if (this._jumping) {\n        return;\n      }\n\n      this.active = current;\n    },\n    stickyChangeHandler: function stickyChangeHandler(current) {\n      var _this3 = this;\n\n      // when sticky change waiting dom changed\n      // then refresh navBar(navBar will get correct height)\n      this.$nextTick(function () {\n        _this3.navBar && _this3.navBar.refresh();\n      });\n      this.$emit(EVENT_STICKY_CHANGE, current);\n    },\n    scrollHandler: function scrollHandler(pos) {\n      this.scrollY = -pos.y;\n\n      if (!this._jumping) {\n        this.active = this.stickyCurrent;\n      }\n    },\n    scrollEndHandler: function scrollEndHandler() {\n      this._jumping = false;\n    },\n    addPanel: function addPanel(panel) {\n      this.panels.push(panel);\n    },\n    removePanel: function removePanel(panel) {\n      var i = this.panels.indexOf(panel);\n      this.panels.splice(i, 1);\n    }\n  },\n  components: {\n    CubeSticky: CubeSticky,\n    CubeStickyEle: CubeStickyEle,\n    CubeScroll: CubeScroll,\n    CubeScrollNavBar: CubeScrollNavBar\n  }\n};",{"version":3,"sources":["scroll-nav.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"cube-scroll-nav\" :class=\"{'cube-scroll-nav_side': side}\">\n    <cube-sticky ref=\"sticky\" :pos=\"scrollY\" @change=\"stickyChangeHandler\">\n      <cube-scroll\n        ref=\"scroll\"\n        :scroll-events=\"scrollEvents\"\n        :options=\"options\"\n        :data=\"data\"\n        @scroll=\"scrollHandler\"\n        @scroll-end=\"scrollEndHandler\">\n        <slot name=\"prepend\"></slot>\n        <div class=\"cube-scroll-nav-main\">\n          <cube-sticky-ele ref=\"navBarEle\" ele-key=\"cube-scroll-nav-bar\">\n            <slot name=\"bar\" :txts=\"barTxts\" :labels=\"labels\" :current=\"active\">\n              <cube-scroll-nav-bar\n                :direction=\"barDirection\"\n                :txts=\"barTxts\"\n                :labels=\"labels\"\n                :current=\"active\" />\n            </slot>\n          </cube-sticky-ele>\n          <cube-sticky\n            ref=\"pageSticky\"\n            :offset=\"pageStickyOffset\"\n            :pos=\"scrollY\"\n            @change=\"pageStickyChangeHandler\">\n            <div class=\"cube-scroll-nav-panels\">\n              <slot></slot>\n            </div>\n            <template slot=\"fixed\" v-if=\"!side\">\n              <div></div>\n            </template>\n          </cube-sticky>\n        </div>\n      </cube-scroll>\n    </cube-sticky>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import scrollMixin from '../../common/mixins/scroll'\n\n  import CubeSticky from '../sticky/sticky.vue'\n  import CubeStickyEle from '../sticky/sticky-ele.vue'\n  import CubeScroll from '../scroll/scroll.vue'\n  import CubeScrollNavBar from '../scroll-nav-bar/scroll-nav-bar.vue'\n\n  const DIRECTION_H = 'horizontal'\n  const DIRECTION_V = 'vertical'\n\n  const COMPONENT_NAME = 'cube-scroll-nav'\n  const EVENT_CHANGE = 'change'\n  const EVENT_STICKY_CHANGE = 'sticky-change'\n\n  export default {\n    name: COMPONENT_NAME,\n    provide() {\n      return {\n        scrollNav: this\n      }\n    },\n    mixins: [scrollMixin],\n    props: {\n      data: {\n        type: Array\n      },\n      speed: {\n        type: Number,\n        default: 300\n      },\n      side: {\n        type: Boolean,\n        default: false\n      },\n      current: {\n        type: [String, Number],\n        default: ''\n      }\n    },\n    data() {\n      return {\n        scrollEvents: ['scroll', 'scroll-end'],\n        scrollY: 0,\n        panels: [],\n        active: this.current,\n        pageStickyOffset: 0\n      }\n    },\n    computed: {\n      labels() {\n        return this.panels.map((panel) => panel.label)\n      },\n      barTxts() {\n        return this.panels.map((panel) => panel.title)\n      },\n      barDirection() {\n        return this.side ? DIRECTION_V : DIRECTION_H\n      }\n    },\n    watch: {\n      current(newVal) {\n        this.stickyCurrent = newVal\n        this.active = newVal\n        this.jumpTo(newVal)\n      },\n      active(newVal) {\n        this.$emit(EVENT_CHANGE, newVal)\n      }\n    },\n    created() {\n      this.navBar = null\n      this.stickyCurrent = this.current\n    },\n    mounted() {\n      this.$nextTick(() => {\n        if (this.side) {\n          const fixedEle = this.$refs.pageSticky.$refs.fixedEle\n          this.$refs.scroll.$el.appendChild(fixedEle)\n        }\n        if (!this.current) {\n          this.active = this.stickyCurrent = this.labels[0]\n        }\n        this.refresh()\n        this.jumpTo(this.current)\n      })\n    },\n    methods: {\n      refresh() {\n        this.navBar && this.navBar.refresh()\n        this.$refs.sticky.refresh()\n        this.$refs.pageSticky.refresh()\n        this.pageStickyOffset = this.side ? 0 : this.$refs.navBarEle.$el.offsetHeight\n        this.$refs.scroll.refresh()\n      },\n      setBar(bar) {\n        this.navBar = bar\n      },\n      barChange(label) {\n        this.active = label\n        // waiting touchend\n        // so the inner scroll won't affect the touchend logic\n        this.$nextTick(() => {\n          this.jumpTo(label)\n        })\n      },\n      jumpTo(label) {\n        if (!label) {\n          return\n        }\n        const panel = this.getPanel(label)\n        if (panel) {\n          this._jumping = true\n          const offset = this.pageStickyOffset\n          this.$refs.scroll.scrollToElement(panel.$el, this.speed, 0, this.side ? offset : -offset)\n        }\n      },\n      getPanel(label) {\n        let panel = null\n        this.panels.some((_panel) => {\n          if (_panel.label === label) {\n            panel = _panel\n            return true\n          }\n        })\n        return panel\n      },\n      pageStickyChangeHandler(current) {\n        if (current === '') {\n          current = this.labels[0]\n        }\n        this.stickyCurrent = current\n        if (this._jumping) {\n          return\n        }\n        this.active = current\n      },\n      stickyChangeHandler(current) {\n        // when sticky change waiting dom changed\n        // then refresh navBar(navBar will get correct height)\n        this.$nextTick(() => {\n          this.navBar && this.navBar.refresh()\n        })\n        this.$emit(EVENT_STICKY_CHANGE, current)\n      },\n      scrollHandler(pos) {\n        this.scrollY = -pos.y\n        if (!this._jumping) {\n          this.active = this.stickyCurrent\n        }\n      },\n      scrollEndHandler() {\n        this._jumping = false\n      },\n      addPanel(panel) {\n        this.panels.push(panel)\n      },\n      removePanel(panel) {\n        const i = this.panels.indexOf(panel)\n        this.panels.splice(i, 1)\n      }\n    },\n    components: {\n      CubeSticky,\n      CubeStickyEle,\n      CubeScroll,\n      CubeScrollNavBar\n    }\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  .cube-scroll-nav\n    position: relative\n    height: 100%\n    overflow: hidden\n    .cube-sticky-content\n      height: 100%\n  .cube-scroll-nav-main\n    overflow: hidden\n    > .cube-sticky\n      position: static\n  .cube-scroll-nav_side\n    > .cube-sticky\n      display: flex\n      > .cube-scroll-wrapper\n        flex: 1\n      > .cube-sticky-fixed\n        position: relative\n        height: 100%\n        order: -1\n    .cube-scroll-nav-main\n      > .cube-sticky-ele\n        float: left\n      > .cube-sticky\n        overflow: hidden\n</style>\n"],"sourceRoot":"node_modules/cube-ui/src/components/scroll-nav"}]}