{"remainingRequest":"/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/components/popup/popup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/components/popup/popup.vue","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport visibilityMixin from '../../common/mixins/visibility'\nimport popupMixin from '../../common/mixins/popup'\nconst COMPONENT_NAME = 'cube-popup'\nconst EVENT_MASK_CLICK = 'mask-click'\n\nexport default {\n  name: COMPONENT_NAME,\n  mixins: [visibilityMixin, popupMixin],\n  props: {\n    type: {\n      type: String,\n      default: ''\n    },\n    mask: {\n      type: Boolean,\n      default: true\n    },\n    content: {\n      type: String,\n      default: ''\n    },\n    center: {\n      type: Boolean,\n      default: true\n    },\n    position: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    rootClass() {\n      const cls = {\n        'cube-popup_mask': this.mask\n      }\n      if (this.type) {\n        cls[`cube-${this.type}`] = true\n      }\n      return cls\n    },\n    containerClass() {\n      const center = this.center\n      const position = this.position\n      if (position) {\n        return {\n          [`cube-popup-${position}`]: true\n        }\n      }\n      if (center) {\n        return {\n          'cube-popup-center': true\n        }\n      }\n    }\n  },\n  methods: {\n    maskClick(e) {\n      this.$emit(EVENT_MASK_CLICK, e)\n      if (this.maskClosable) {\n        this.hide()\n      }\n    }\n  }\n}\n",{"version":3,"sources":["popup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"popup.vue","sourceRoot":"node_modules/cube-ui/src/components/popup","sourcesContent":["<template>\n  <div class=\"cube-popup\" :style=\"{'z-index': zIndex}\" :class=\"rootClass\" v-show=\"isVisible\">\n    <div class=\"cube-popup-mask\" @touchmove.prevent @click=\"maskClick\">\n      <slot name=\"mask\"></slot>\n    </div>\n    <div class=\"cube-popup-container\" @touchmove.prevent :class=\"containerClass\">\n      <div class=\"cube-popup-content\" v-if=\"$slots.default\">\n        <slot></slot>\n      </div>\n      <div class=\"cube-popup-content\" v-else v-html=\"content\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import visibilityMixin from '../../common/mixins/visibility'\n  import popupMixin from '../../common/mixins/popup'\n  const COMPONENT_NAME = 'cube-popup'\n  const EVENT_MASK_CLICK = 'mask-click'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [visibilityMixin, popupMixin],\n    props: {\n      type: {\n        type: String,\n        default: ''\n      },\n      mask: {\n        type: Boolean,\n        default: true\n      },\n      content: {\n        type: String,\n        default: ''\n      },\n      center: {\n        type: Boolean,\n        default: true\n      },\n      position: {\n        type: String,\n        default: ''\n      }\n    },\n    computed: {\n      rootClass() {\n        const cls = {\n          'cube-popup_mask': this.mask\n        }\n        if (this.type) {\n          cls[`cube-${this.type}`] = true\n        }\n        return cls\n      },\n      containerClass() {\n        const center = this.center\n        const position = this.position\n        if (position) {\n          return {\n            [`cube-popup-${position}`]: true\n          }\n        }\n        if (center) {\n          return {\n            'cube-popup-center': true\n          }\n        }\n      }\n    },\n    methods: {\n      maskClick(e) {\n        this.$emit(EVENT_MASK_CLICK, e)\n        if (this.maskClosable) {\n          this.hide()\n        }\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n  .cube-popup\n    position: fixed\n    left: 0\n    right:0\n    top: 0\n    bottom: 0\n    z-index: 100\n    pointer-events: none\n  .cube-popup_mask\n    pointer-events: auto\n    .cube-popup-mask\n      display: block\n  .cube-popup-mask, .cube-popup-container\n    position: absolute\n    width: 100%\n    height: 100%\n  .cube-popup-mask\n    display: none\n    overflow: hidden\n    background-color: $popup-mask-bgc\n    opacity: $popup-mask-opacity\n    pointer-events: auto\n    // fix some android webview opacity render bug\n    &::before\n      content: \".\"\n      display: block\n      width: 1px\n      height: 1px\n      background-color: rgba(0, 0, 0, .1)\n      margin-left: -10px\n  .cube-popup-container\n    transform: translate(100%, 100%)\n  .cube-popup-content\n    position: absolute\n    top: 0\n    left: 0\n    width: 100%\n    box-sizing: border-box\n    transform: translate(-100%, -100%)\n    pointer-events: auto\n  .cube-popup-center,\n  .cube-popup-right,\n  .cube-popup-left\n    .cube-popup-content\n      top: -50%\n      left: -50%\n      width: auto\n      max-width: 100%\n      transform: translate(0, 0)\n  .cube-popup-right,\n  .cube-popup-left\n    .cube-popup-content\n      height: 100%\n      top: -100%\n  .cube-popup-center\n      .cube-popup-content\n        transform: translate(-50%, -50%)\n  .cube-popup-top\n    .cube-popup-content\n      top: -100%\n      left: -100%\n      transform: translate(0, 0)\n  .cube-popup-right\n    .cube-popup-content\n      top: -100%\n      right: 100%\n  .cube-popup-left\n    .cube-popup-content\n      left: -100%\n</style>\n"]}]}