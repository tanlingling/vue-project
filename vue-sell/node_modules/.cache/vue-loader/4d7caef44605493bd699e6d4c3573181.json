{"remainingRequest":"/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/components/select/select.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/components/select/select.vue","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@require \"../../common/stylus/variable.styl\"\n@require \"../../common/stylus/mixin.styl\"\n\n.cube-select\n  position: relative\n  box-sizing: border-box\n  padding: 10px 20px 10px 10px\n  border-radius: 2px\n  font-size: $fontsize-medium\n  line-height: 1.429\n  color: $select-color\n  background-color: $select-bgc\n  border-1px($select-border-color, 2px)\n  > span\n    display: inline-block\n.cube-select_active\n  border-1px($select-border-active-color)\n  .cube-select-icon\n    transform: translate(0, -50%) rotate(180deg)\n.cube-select_disabled\n  color: $select-disabled-color\n  background-color: $select-disabled-bgc\n  cursor: not-allowed\n.cube-select-placeholder\n  color: $select-placeholder-color\n.cube-select-icon\n  position: absolute\n  right: 8px\n  top: 50%\n  transform: translate(0, -50%)\n  border-style: solid\n  border-color: $select-icon-color transparent transparent transparent\n  border-width: 4px 4px 0 4px\n  transition: transform .3s ease-in-out\n",{"version":3,"sources":["select.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"select.vue","sourceRoot":"node_modules/cube-ui/src/components/select","sourcesContent":["<template>\n  <div class=\"cube-select\" :class=\"{ 'cube-select_active': active, 'cube-select_disabled': disabled }\" @click=\"showPicker\">\n    <span v-if=\"selectedText\" class=\"cube-select-text\">{{ selectedText }}</span>\n    <span v-else class=\"cube-select-placeholder\">{{ _placeholder }}</span>\n    <i class=\"cube-select-icon\"></i>\n  </div>\n</template>\n\n<script>\n  import { findIndex } from '../../common/helpers/util'\n  import localeMixin from '../../common/mixins/locale'\n\n  const COMPONENT_NAME = 'cube-select'\n\n  const EVENT_CHANGE = 'change'\n  const EVENT_INPUT = 'input' // only used for v-model\n  const EVENT_PICKER_SHOW = 'picker-show'\n  const EVENT_PICKER_HIDE = 'picker-hide'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [ localeMixin ],\n    data() {\n      return {\n        active: false\n      }\n    },\n    props: {\n      options: {\n        type: Array,\n        default() {\n          /* istanbul ignore next */\n          return []\n        }\n      },\n      value: null,\n      placeholder: {\n        type: String,\n        default: ''\n      },\n      autoPop: {\n        type: Boolean,\n        default: false\n      },\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n      title: {\n        type: String,\n        default: ''\n      },\n      cancelTxt: {\n        type: String,\n        default: ''\n      },\n      confirmTxt: {\n        type: String,\n        default: ''\n      }\n    },\n    computed: {\n      adaptOptions() {\n        return [this.options.map(item => {\n          if (typeof item !== 'object') {\n            item = {\n              value: item,\n              text: item\n            }\n          }\n          return item\n        })]\n      },\n      valueIndex() {\n        const val = this.value\n        const index = findIndex(this.adaptOptions[0], (item) => {\n          return item.value === val\n        })\n        this.picker && this.picker.setData(this.adaptOptions, index !== -1 ? [index] : [0])\n\n        return index\n      },\n      selectedIndex() {\n        return this.valueIndex !== -1 ? [this.valueIndex] : [0]\n      },\n      selectedText() {\n        return this.valueIndex !== -1 ? this.adaptOptions[0][this.valueIndex].text : ''\n      },\n      _placeholder () {\n        return this.placeholder || this.$t('selectText')\n      },\n      _title () {\n        return this.title || this.$t('selectText')\n      },\n      _cancelTxt () {\n        return this.cancelTxt || this.$t('cancel')\n      },\n      _confirmTxt () {\n        return this.confirmTxt || this.$t('ok')\n      }\n    },\n    created() {\n      this.picker = this.$createPicker({\n        $props: {\n          title: '_title',\n          data: 'adaptOptions',\n          selectedIndex: 'selectedIndex',\n          cancelTxt: '_cancelTxt',\n          confirmTxt: '_confirmTxt'\n        },\n        $events: {\n          select: 'selectHandler',\n          cancel: this.hided\n        }\n      })\n      this.autoPop && this.showPicker()\n    },\n    methods: {\n      showPicker() {\n        if (this.disabled) {\n          return\n        }\n        this.picker.show()\n        this.active = true\n        this.$emit(EVENT_PICKER_SHOW)\n      },\n      hided() {\n        this.active = false\n        this.$emit(EVENT_PICKER_HIDE)\n      },\n      selectHandler(selectedVal, selectedIndex, selectedText) {\n        this.hided()\n        if (selectedVal[0] !== this.value) {\n          this.$emit(EVENT_INPUT, selectedVal[0])\n          this.$emit(EVENT_CHANGE, selectedVal[0], selectedIndex[0], selectedText[0])\n        }\n      }\n    }\n  }\n</script>\n<style lang=\"stylus\">\n  @require \"../../common/stylus/variable.styl\"\n  @require \"../../common/stylus/mixin.styl\"\n\n  .cube-select\n    position: relative\n    box-sizing: border-box\n    padding: 10px 20px 10px 10px\n    border-radius: 2px\n    font-size: $fontsize-medium\n    line-height: 1.429\n    color: $select-color\n    background-color: $select-bgc\n    border-1px($select-border-color, 2px)\n    > span\n      display: inline-block\n  .cube-select_active\n    border-1px($select-border-active-color)\n    .cube-select-icon\n      transform: translate(0, -50%) rotate(180deg)\n  .cube-select_disabled\n    color: $select-disabled-color\n    background-color: $select-disabled-bgc\n    cursor: not-allowed\n  .cube-select-placeholder\n    color: $select-placeholder-color\n  .cube-select-icon\n    position: absolute\n    right: 8px\n    top: 50%\n    transform: translate(0, -50%)\n    border-style: solid\n    border-color: $select-icon-color transparent transparent transparent\n    border-width: 4px 4px 0 4px\n    transition: transform .3s ease-in-out\n</style>\n"]}]}