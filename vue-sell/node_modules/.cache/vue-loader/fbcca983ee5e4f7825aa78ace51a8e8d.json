{"remainingRequest":"/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/components/checkbox-group/checkbox-group.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/components/checkbox-group/checkbox-group.vue","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CubeCheckbox from '../checkbox/checkbox.vue'\nconst COMPONENT_NAME = 'cube-checkbox-group'\n\nconst EVENT_INPUT = 'input'\nconst EVENT_CHECKED = 'checked'\nconst EVENT_CANCLE_CHECKED = 'cancel-checked'\n\nexport default {\n  name: COMPONENT_NAME,\n  props: {\n    value: {\n      type: Array\n    },\n    horizontal: {\n      type: Boolean,\n      default: false\n    },\n    shape: {\n      type: String,\n      default: 'circle'\n    },\n    position: {\n      type: String,\n      default: 'left'\n    },\n    hollowStyle: {\n      type: Boolean,\n      default: false\n    },\n    options: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: Infinity\n    }\n  },\n  data () {\n    return {\n      _value: [],\n      _checkboxGroup: true\n    }\n  },\n  computed: {\n    groupClass() {\n      if (!this.horizontal) {\n        return 'border-top-1px border-bottom-1px'\n      }\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler (newValue, oldValue) {\n        this._value = this.value.concat()\n      }\n    }\n  },\n  mounted () {\n    this.$on(EVENT_CHECKED, (value) => {\n      if (this._value.length < this.max) {\n        this._value.push(value)\n      }\n      this.$emit(EVENT_INPUT, this._value)\n    })\n    this.$on(EVENT_CANCLE_CHECKED, (value) => {\n      if (this._value.length > this.min) {\n        const index = this._value.indexOf(value)\n        this._value.splice(index, 1)\n      }\n      this.$emit(EVENT_INPUT, this._value)\n    })\n  },\n  components: {\n    CubeCheckbox\n  }\n}\n",{"version":3,"sources":["checkbox-group.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"checkbox-group.vue","sourceRoot":"node_modules/cube-ui/src/components/checkbox-group","sourcesContent":["<template>\n  <div class=\"cube-checkbox-group\" ref=\"group\" :class=\"groupClass\" :data-horz=\"horizontal\">\n    <slot>\n      <cube-checkbox\n        v-for=\"(option, index) in options\"\n        :key=\"index\"\n        :option=\"option\"\n        :shape=\"shape\"\n        :position=\"position\"\n        :hollow-style=\"hollowStyle\" />\n    </slot>\n  </div>\n</template>\n<script type=\"text/ecmascript-6\">\n  import CubeCheckbox from '../checkbox/checkbox.vue'\n  const COMPONENT_NAME = 'cube-checkbox-group'\n\n  const EVENT_INPUT = 'input'\n  const EVENT_CHECKED = 'checked'\n  const EVENT_CANCLE_CHECKED = 'cancel-checked'\n\n  export default {\n    name: COMPONENT_NAME,\n    props: {\n      value: {\n        type: Array\n      },\n      horizontal: {\n        type: Boolean,\n        default: false\n      },\n      shape: {\n        type: String,\n        default: 'circle'\n      },\n      position: {\n        type: String,\n        default: 'left'\n      },\n      hollowStyle: {\n        type: Boolean,\n        default: false\n      },\n      options: {\n        type: Array,\n        default() {\n          return []\n        }\n      },\n      min: {\n        type: Number,\n        default: 0\n      },\n      max: {\n        type: Number,\n        default: Infinity\n      }\n    },\n    data () {\n      return {\n        _value: [],\n        _checkboxGroup: true\n      }\n    },\n    computed: {\n      groupClass() {\n        if (!this.horizontal) {\n          return 'border-top-1px border-bottom-1px'\n        }\n      }\n    },\n    watch: {\n      value: {\n        immediate: true,\n        handler (newValue, oldValue) {\n          this._value = this.value.concat()\n        }\n      }\n    },\n    mounted () {\n      this.$on(EVENT_CHECKED, (value) => {\n        if (this._value.length < this.max) {\n          this._value.push(value)\n        }\n        this.$emit(EVENT_INPUT, this._value)\n      })\n      this.$on(EVENT_CANCLE_CHECKED, (value) => {\n        if (this._value.length > this.min) {\n          const index = this._value.indexOf(value)\n          this._value.splice(index, 1)\n        }\n        this.$emit(EVENT_INPUT, this._value)\n      })\n    },\n    components: {\n      CubeCheckbox\n    }\n  }\n</script>\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n  @require \"../../common/stylus/mixin.styl\"\n\n  .cube-checkbox-group\n    z-index: 1\n    overflow: hidden\n    background-color: $checkbox-group-bgc\n    .cube-checkbox\n      &:last-child\n        .cube-checkbox-wrap\n          border-none()\n  .cube-checkbox-group[data-horz=\"true\"]\n    display: flex\n    padding-left: 0\n    border-1px($checkbox-group-horizontal-bdc, 2px)\n    border-radius: 2px\n    .cube-checkbox\n      flex-fix()\n      text-align: center\n      padding-left: 10px\n      padding-right: 10px\n      &:after\n        border-color: $checkbox-group-horizontal-bdc\n      &:last-child\n        border-none()\n      &[data-pos=\"right\"]\n        .cube-checkbox-ui\n          position: relative\n          margin-left: .42em\n          order: 1\n        .cube-checkbox-label\n          margin-right: 0\n    .cube-checkbox-wrap\n      justify-content: center\n</style>\n"]}]}