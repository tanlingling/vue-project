{"remainingRequest":"/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/components/swipe/swipe.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tanlingling/git/vue-sell/node_modules/cube-ui/src/components/swipe/swipe.vue","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CubeSwipeItem from './swipe-item.vue'\n\nconst COMPONENT_NAME = 'cube-swipe'\nconst EVENT_ITEM_CLICK = 'item-click'\nconst EVENT_BTN_CLICK = 'btn-click'\n\nexport default {\n  name: COMPONENT_NAME,\n  provide() {\n    return {\n      swipe: this\n    }\n  },\n  props: {\n    data: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    autoShrink: {\n      type: Boolean,\n      default: false\n    }\n  },\n  created() {\n    this.activeIndex = -1\n    this.items = []\n  },\n  methods: {\n    addItem(item) {\n      this.items.push(item)\n    },\n    removeItem(item) {\n      const index = this.items.indexOf(item)\n      this.items.splice(index, 1)\n      if (index <= this.activeIndex) {\n        this.activeIndex -= 1\n      }\n    },\n    onItemClick(item, index) {\n      this.$emit(EVENT_ITEM_CLICK, item, index)\n    },\n    onBtnClick(btn, index) {\n      const item = this.data[index]\n      this.$emit(EVENT_BTN_CLICK, btn, index, item)\n    },\n    onItemActive(index) {\n      if (index === this.activeIndex) {\n        return\n      }\n      if (this.activeIndex !== -1) {\n        const activeItem = this.items[this.activeIndex]\n        activeItem.shrink()\n      }\n      this.activeIndex = index\n    }\n  },\n  components: {\n    CubeSwipeItem\n  }\n}\n",{"version":3,"sources":["swipe.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"swipe.vue","sourceRoot":"node_modules/cube-ui/src/components/swipe","sourcesContent":["<template>\n  <div class=\"cube-swipe\">\n    <slot>\n      <transition-group name=\"cube-swipe\" tag=\"ul\">\n        <li v-for=\"(item, index) in data\" :key=\"item.item.value\">\n          <cube-swipe-item\n            :btns=\"item.btns\"\n            :item=\"item.item\"\n            :index=\"index\"\n            :auto-shrink=\"autoShrink\" />\n        </li>\n      </transition-group>\n    </slot>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import CubeSwipeItem from './swipe-item.vue'\n\n  const COMPONENT_NAME = 'cube-swipe'\n  const EVENT_ITEM_CLICK = 'item-click'\n  const EVENT_BTN_CLICK = 'btn-click'\n\n  export default {\n    name: COMPONENT_NAME,\n    provide() {\n      return {\n        swipe: this\n      }\n    },\n    props: {\n      data: {\n        type: Array,\n        default() {\n          return []\n        }\n      },\n      autoShrink: {\n        type: Boolean,\n        default: false\n      }\n    },\n    created() {\n      this.activeIndex = -1\n      this.items = []\n    },\n    methods: {\n      addItem(item) {\n        this.items.push(item)\n      },\n      removeItem(item) {\n        const index = this.items.indexOf(item)\n        this.items.splice(index, 1)\n        if (index <= this.activeIndex) {\n          this.activeIndex -= 1\n        }\n      },\n      onItemClick(item, index) {\n        this.$emit(EVENT_ITEM_CLICK, item, index)\n      },\n      onBtnClick(btn, index) {\n        const item = this.data[index]\n        this.$emit(EVENT_BTN_CLICK, btn, index, item)\n      },\n      onItemActive(index) {\n        if (index === this.activeIndex) {\n          return\n        }\n        if (this.activeIndex !== -1) {\n          const activeItem = this.items[this.activeIndex]\n          activeItem.shrink()\n        }\n        this.activeIndex = index\n      }\n    },\n    components: {\n      CubeSwipeItem\n    }\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  .cube-swipe\n    overflow: hidden\n\n  .cube-swipe-enter-active, .cube-swipe-leave-active\n    transition: all 0.3s\n    .cube-swipe-item-inner\n      transition: all 0.3s\n\n  .cube-swipe-enter, .cube-swipe-leave-to\n    .cube-swipe-item-inner\n      height: 0\n</style>\n"]}]}