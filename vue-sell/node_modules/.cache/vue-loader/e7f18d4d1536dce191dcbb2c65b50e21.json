{"remainingRequest":"/Users/tanlingling/Desktop/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/Desktop/sell/node_modules/cube-ui/src/components/cascade-picker/cascade-picker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tanlingling/Desktop/sell/node_modules/cube-ui/src/components/cascade-picker/cascade-picker.vue","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CubePicker from '../picker/picker.vue'\nimport visibilityMixin from '../../common/mixins/visibility'\nimport popupMixin from '../../common/mixins/popup'\nimport basicPickerMixin from '../../common/mixins/basic-picker'\nimport pickerMixin from '../../common/mixins/picker'\nimport localeMixin from '../../common/mixins/locale'\n\nconst COMPONENT_NAME = 'cube-cascade-picker'\nconst EVENT_SELECT = 'select'\nconst EVENT_CANCEL = 'cancel'\nconst EVENT_CHANGE = 'change'\n\nexport default {\n  name: COMPONENT_NAME,\n  mixins: [visibilityMixin, popupMixin, basicPickerMixin, pickerMixin, localeMixin],\n  props: {\n    async: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      cascadeData: this.data.slice(),\n      pickerSelectedIndex: this.selectedIndex.slice(),\n      pickerData: [],\n      pending: false\n    }\n  },\n  created() {\n    this._updatePickerData()\n  },\n  methods: {\n    setData(data, selectedIndex = []) {\n      this.pending = false\n      this.cascadeData = data.slice()\n      this.pickerSelectedIndex = selectedIndex.slice()\n      this._updatePickerData()\n    },\n    _pickerSelect(selectedVal, selectedIndex, selectedText) {\n      this.$emit(EVENT_SELECT, selectedVal, selectedIndex, selectedText)\n    },\n    _pickerCancel() {\n      this.$emit(EVENT_CANCEL)\n    },\n    _pickerChange(i, newIndex) {\n      if (newIndex !== this.pickerSelectedIndex[i]) {\n        this.pickerSelectedIndex.splice(i, 1, newIndex)\n        this.async\n          ? (this.pending = i !== this.pickerData.length - 1)\n          : this._updatePickerData(i + 1)\n      }\n      this.$emit(EVENT_CHANGE, i, newIndex)\n    },\n    _updatePickerData(fromColumn = 0) {\n      let data = this.cascadeData\n      let i = 0\n      while (data) {\n        if (i >= fromColumn) {\n          let columnData = []\n          data.forEach((item) => {\n            columnData.push({\n              value: item[this.valueKey],\n              text: item[this.textKey]\n            })\n          })\n          this.pickerData[i] = columnData\n          /* refillColumn could only be called after show() */\n          this.pickerSelectedIndex[i] = fromColumn === 0\n            ? (this.pickerSelectedIndex[i] < data.length ? this.pickerSelectedIndex[i] || 0 : 0)\n            : this.$refs.picker.refillColumn(i, columnData)\n        }\n        data = data.length ? data[this.pickerSelectedIndex[i]].children : null\n\n        i++\n      }\n\n      if (i < this.pickerData.length) {\n        this.pickerData.splice(i, this.pickerData.length - i)\n      }\n\n      this.pickerData = this.pickerData.slice()\n    }\n  },\n  components: {\n    CubePicker\n  }\n}\n",{"version":3,"sources":["cascade-picker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cascade-picker.vue","sourceRoot":"node_modules/cube-ui/src/components/cascade-picker","sourcesContent":["<template>\n  <cube-picker\n    ref=\"picker\"\n    v-model=\"isVisible\"\n    :data=\"pickerData\"\n    :selected-index=\"pickerSelectedIndex\"\n    :pending=\"pending\"\n    :title=\"title\"\n    :subtitle=\"subtitle\"\n    :z-index=\"zIndex\"\n    :cancel-txt=\"_cancelTxt\"\n    :confirm-txt=\"_confirmTxt\"\n    :swipe-time=\"swipeTime\"\n    :mask-closable=\"maskClosable\"\n    @select=\"_pickerSelect\"\n    @cancel=\"_pickerCancel\"\n    @change=\"_pickerChange\">\n  </cube-picker>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import CubePicker from '../picker/picker.vue'\n  import visibilityMixin from '../../common/mixins/visibility'\n  import popupMixin from '../../common/mixins/popup'\n  import basicPickerMixin from '../../common/mixins/basic-picker'\n  import pickerMixin from '../../common/mixins/picker'\n  import localeMixin from '../../common/mixins/locale'\n\n  const COMPONENT_NAME = 'cube-cascade-picker'\n  const EVENT_SELECT = 'select'\n  const EVENT_CANCEL = 'cancel'\n  const EVENT_CHANGE = 'change'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [visibilityMixin, popupMixin, basicPickerMixin, pickerMixin, localeMixin],\n    props: {\n      async: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data () {\n      return {\n        cascadeData: this.data.slice(),\n        pickerSelectedIndex: this.selectedIndex.slice(),\n        pickerData: [],\n        pending: false\n      }\n    },\n    created() {\n      this._updatePickerData()\n    },\n    methods: {\n      setData(data, selectedIndex = []) {\n        this.pending = false\n        this.cascadeData = data.slice()\n        this.pickerSelectedIndex = selectedIndex.slice()\n        this._updatePickerData()\n      },\n      _pickerSelect(selectedVal, selectedIndex, selectedText) {\n        this.$emit(EVENT_SELECT, selectedVal, selectedIndex, selectedText)\n      },\n      _pickerCancel() {\n        this.$emit(EVENT_CANCEL)\n      },\n      _pickerChange(i, newIndex) {\n        if (newIndex !== this.pickerSelectedIndex[i]) {\n          this.pickerSelectedIndex.splice(i, 1, newIndex)\n          this.async\n            ? (this.pending = i !== this.pickerData.length - 1)\n            : this._updatePickerData(i + 1)\n        }\n        this.$emit(EVENT_CHANGE, i, newIndex)\n      },\n      _updatePickerData(fromColumn = 0) {\n        let data = this.cascadeData\n        let i = 0\n        while (data) {\n          if (i >= fromColumn) {\n            let columnData = []\n            data.forEach((item) => {\n              columnData.push({\n                value: item[this.valueKey],\n                text: item[this.textKey]\n              })\n            })\n            this.pickerData[i] = columnData\n            /* refillColumn could only be called after show() */\n            this.pickerSelectedIndex[i] = fromColumn === 0\n              ? (this.pickerSelectedIndex[i] < data.length ? this.pickerSelectedIndex[i] || 0 : 0)\n              : this.$refs.picker.refillColumn(i, columnData)\n          }\n          data = data.length ? data[this.pickerSelectedIndex[i]].children : null\n\n          i++\n        }\n\n        if (i < this.pickerData.length) {\n          this.pickerData.splice(i, this.pickerData.length - i)\n        }\n\n        this.pickerData = this.pickerData.slice()\n      }\n    },\n    components: {\n      CubePicker\n    }\n  }\n</script>\n"]}]}