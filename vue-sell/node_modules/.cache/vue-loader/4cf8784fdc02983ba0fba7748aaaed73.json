{"remainingRequest":"/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/git/vue-sell/src/components/shop-cart/shop-cart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tanlingling/git/vue-sell/src/components/shop-cart/shop-cart.vue","mtime":1548142770922},{"path":"/Users/tanlingling/git/vue-sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/git/vue-sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Bubble from 'components/bubble/bubble'\nconst BALL_LEN = 10\nconst innerClsHook = 'inner-hook'\n\nfunction createBalls () {\n  let ret = []\n  for (let i=0; i < BALL_LEN; i++) {\n    ret.push({\n      show: false\n    })\n  }\n  return ret\n}\n\nexport default {\n  name: 'shop-cart',\n  props: {\n    selectFoods: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    minPrice: {\n      type: Number,\n      default: 0\n    },\n    deliveryPrice: {\n      type: Number,\n      default: 0\n    },\n    fold: {\n      type: Boolean,\n      default: true\n    },\n    sticky: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      balls: createBalls(),\n      listFold: this.fold\n    }\n  },\n  created () {\n    this.dropBalls = []\n  },\n  methods: {\n    drop (el) {\n      for (let i=0; i < this.balls.length; i++) {\n        let ball = this.balls[i]\n        if (!ball.show) {\n          ball.show = true\n          ball.el = el\n          this.dropBalls.push(ball)\n          return\n        }\n      }\n    },\n    beforeDrop (el) {\n      const ball = this.dropBalls[this.dropBalls.length - 1]\n      const rect = ball.el.getBoundingClientRect()\n      const x = rect.left - 32\n      const y = -(window.innerHeight - rect.top - 22)\n      el.style.display = ''\n      el.style.transform = el.style.webkitTransform = `translate3d(0, ${y}px, 0)`\n      const inner = el.getElementsByClassName(innerClsHook)[0]\n      inner.style.transform = inner.style.webkitTransform = `translate3d(${x}px, 0, 0)`\n    },\n    dropping (el, done) {\n      this._reflow = document.body.offsetHeight\n      el.style.transform = el.style.webkitTransform = `translate3d(0, 0, 0)`\n      const inner = el.getElementsByClassName(innerClsHook)[0]\n      inner.style.transform = inner.style.webkitTransform = `translate3d(0, 0, 0)`\n      el.addEventListener('transitionend', done)\n    },\n    afterDrop (el) {\n      const ball = this.dropBalls.shift()\n      if (ball) {\n        ball.show = false\n        el.style.display = 'none'\n      }\n\n    },\n    toggleList () {\n      if (this.listFold) {\n        if (!this.totalCount) {\n          return\n        } else {\n          this.listFold = false\n          this._showShopCartList()\n          this._showShopCartSticky()\n        }\n      } else {\n        this.listFold = true\n        this._hideShopCartList()\n      }\n    },\n    _showShopCartList () {\n      this.shopCartListComp = this.shopCartListComp || this.$createShopCartList({\n        $props: {\n          selectFoods: 'selectFoods'\n        },\n        $events: {\n          hide: () => {\n            this.listFold = true\n          },\n          leave: () => {\n            this._hideShopCartSticky()\n          },\n          add: (el) => {\n            this.showShopCartStickyComp.drop(el)\n          }\n        }\n      })\n      this.shopCartListComp.show()\n    },\n    _showShopCartSticky () {\n      this.showShopCartStickyComp = this.showShopCartStickyComp || this.$createShopCartSticky({\n        $props: {\n          selectFoods: 'selectFoods',\n          minPrice: 'minPrice',\n          deliveryPrice: 'deliveryPrice',\n          fold: 'listFold',\n          list: this.shopCartListComp,\n          sticky: 'sticky'\n        }\n      })\n      this.showShopCartStickyComp.show()\n    },\n    _hideShopCartList () {\n      const comp = this.sticky ? this.$parent.list : this.shopCartListComp\n      comp.hide && comp.hide()\n    },\n    _hideShopCartSticky () {\n      this.showShopCartStickyComp.hide()\n    },\n    pay (e) {\n      if (this.totalPrice < this.minPrice) {\n        return\n      }\n      this.$createDialog({\n        title: '支付',\n        content: `您需要支付${this.totalPrice}元`\n      }).show()\n      e.stopPropagation()\n    }\n  },\n  computed: {\n    totalPrice () {\n      let total = 0\n      this.selectFoods.forEach((food) => {\n        total += food.price * food.count\n      })\n      return total\n    },\n    totalCount () {\n      let count = 0\n      this.selectFoods.forEach((food) => {\n        count += food.count\n      })\n      return count\n    },\n    payDesc () {\n      if (this.totalPrice === 0) {\n        return `¥${this.minPrice}元起送`\n      } else if (this.totalPrice < this.minPrice) {\n        let diff = this.minPrice - this.totalPrice\n        return `还差${diff}元起送`\n      } else {\n        return '去结算'\n      }\n    },\n    payClass () {\n      if (!this.totalPrice || this.totalPrice < this.minPrice) {\n        return 'not-enough'\n      } else {\n        return 'enough'\n      }\n    },\n    shopCartClass () {\n      if (this.totalCount > 0) {\n        return 'blue-cart'\n      } else {\n        return ''\n      }\n    }\n  },\n  components: {\n    Bubble\n  },\n  watch: {\n    fold (newValue) {\n      this.listFold = newValue\n    },\n    totalCount (newValue) {\n      if (!this.listFold && !newValue) {\n        this._hideShopCartList()\n      }\n    }\n  }\n}\n",{"version":3,"sources":["shop-cart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"shop-cart.vue","sourceRoot":"src/components/shop-cart","sourcesContent":["<template>\n  <div class=\"shop-cart\">\n    <div class=\"content\" @click=\"toggleList\">\n      <div class=\"content-left\">\n        <div class=\"icon-wp\">\n          <div class=\"shop-icon\" :class=\"shopCartClass\">\n            <span class=\"icon-shopping_cart\"></span>\n          </div>\n        </div>\n        <div class=\"total-price\">¥{{totalPrice}}</div>\n        <div class=\"desp\">另需配送费¥{{deliveryPrice}}</div>\n        <div class=\"bubble-wp\" v-show=\"totalCount > 0\">\n          <bubble :num=\"totalCount\"></bubble>\n        </div>\n      </div>\n      <div class=\"content-right\" :class=\"payClass\" @click=\"pay\">\n        {{payDesc}}\n      </div>\n    </div>\n    <div class=\"ball-wp\">\n      <div v-for=\"(ball, index) in balls\" :key=\"index\">\n        <transition\n          @before-enter=\"beforeDrop\"\n          @enter=\"dropping\"\n          @after-enter=\"afterDrop\"\n        >\n          <div class=\"ball\" v-show=\"ball.show\">\n            <div class=\"inner inner-hook\"></div>\n          </div>\n        </transition>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import Bubble from 'components/bubble/bubble'\n  const BALL_LEN = 10\n  const innerClsHook = 'inner-hook'\n\n  function createBalls () {\n    let ret = []\n    for (let i=0; i < BALL_LEN; i++) {\n      ret.push({\n        show: false\n      })\n    }\n    return ret\n  }\n\n  export default {\n    name: 'shop-cart',\n    props: {\n      selectFoods: {\n        type: Array,\n        default () {\n          return []\n        }\n      },\n      minPrice: {\n        type: Number,\n        default: 0\n      },\n      deliveryPrice: {\n        type: Number,\n        default: 0\n      },\n      fold: {\n        type: Boolean,\n        default: true\n      },\n      sticky: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data () {\n      return {\n        balls: createBalls(),\n        listFold: this.fold\n      }\n    },\n    created () {\n      this.dropBalls = []\n    },\n    methods: {\n      drop (el) {\n        for (let i=0; i < this.balls.length; i++) {\n          let ball = this.balls[i]\n          if (!ball.show) {\n            ball.show = true\n            ball.el = el\n            this.dropBalls.push(ball)\n            return\n          }\n        }\n      },\n      beforeDrop (el) {\n        const ball = this.dropBalls[this.dropBalls.length - 1]\n        const rect = ball.el.getBoundingClientRect()\n        const x = rect.left - 32\n        const y = -(window.innerHeight - rect.top - 22)\n        el.style.display = ''\n        el.style.transform = el.style.webkitTransform = `translate3d(0, ${y}px, 0)`\n        const inner = el.getElementsByClassName(innerClsHook)[0]\n        inner.style.transform = inner.style.webkitTransform = `translate3d(${x}px, 0, 0)`\n      },\n      dropping (el, done) {\n        this._reflow = document.body.offsetHeight\n        el.style.transform = el.style.webkitTransform = `translate3d(0, 0, 0)`\n        const inner = el.getElementsByClassName(innerClsHook)[0]\n        inner.style.transform = inner.style.webkitTransform = `translate3d(0, 0, 0)`\n        el.addEventListener('transitionend', done)\n      },\n      afterDrop (el) {\n        const ball = this.dropBalls.shift()\n        if (ball) {\n          ball.show = false\n          el.style.display = 'none'\n        }\n\n      },\n      toggleList () {\n        if (this.listFold) {\n          if (!this.totalCount) {\n            return\n          } else {\n            this.listFold = false\n            this._showShopCartList()\n            this._showShopCartSticky()\n          }\n        } else {\n          this.listFold = true\n          this._hideShopCartList()\n        }\n      },\n      _showShopCartList () {\n        this.shopCartListComp = this.shopCartListComp || this.$createShopCartList({\n          $props: {\n            selectFoods: 'selectFoods'\n          },\n          $events: {\n            hide: () => {\n              this.listFold = true\n            },\n            leave: () => {\n              this._hideShopCartSticky()\n            },\n            add: (el) => {\n              this.showShopCartStickyComp.drop(el)\n            }\n          }\n        })\n        this.shopCartListComp.show()\n      },\n      _showShopCartSticky () {\n        this.showShopCartStickyComp = this.showShopCartStickyComp || this.$createShopCartSticky({\n          $props: {\n            selectFoods: 'selectFoods',\n            minPrice: 'minPrice',\n            deliveryPrice: 'deliveryPrice',\n            fold: 'listFold',\n            list: this.shopCartListComp,\n            sticky: 'sticky'\n          }\n        })\n        this.showShopCartStickyComp.show()\n      },\n      _hideShopCartList () {\n        const comp = this.sticky ? this.$parent.list : this.shopCartListComp\n        comp.hide && comp.hide()\n      },\n      _hideShopCartSticky () {\n        this.showShopCartStickyComp.hide()\n      },\n      pay (e) {\n        if (this.totalPrice < this.minPrice) {\n          return\n        }\n        this.$createDialog({\n          title: '支付',\n          content: `您需要支付${this.totalPrice}元`\n        }).show()\n        e.stopPropagation()\n      }\n    },\n    computed: {\n      totalPrice () {\n        let total = 0\n        this.selectFoods.forEach((food) => {\n          total += food.price * food.count\n        })\n        return total\n      },\n      totalCount () {\n        let count = 0\n        this.selectFoods.forEach((food) => {\n          count += food.count\n        })\n        return count\n      },\n      payDesc () {\n        if (this.totalPrice === 0) {\n          return `¥${this.minPrice}元起送`\n        } else if (this.totalPrice < this.minPrice) {\n          let diff = this.minPrice - this.totalPrice\n          return `还差${diff}元起送`\n        } else {\n          return '去结算'\n        }\n      },\n      payClass () {\n        if (!this.totalPrice || this.totalPrice < this.minPrice) {\n          return 'not-enough'\n        } else {\n          return 'enough'\n        }\n      },\n      shopCartClass () {\n        if (this.totalCount > 0) {\n          return 'blue-cart'\n        } else {\n          return ''\n        }\n      }\n    },\n    components: {\n      Bubble\n    },\n    watch: {\n      fold (newValue) {\n        this.listFold = newValue\n      },\n      totalCount (newValue) {\n        if (!this.listFold && !newValue) {\n          this._hideShopCartList()\n        }\n      }\n    }\n  }\n</script>\n\n<style lang='stylus' scoped>\n  .shop-cart\n    height: 100%\n    background-color: #141d27\n    color: rgba(255, 255, 255, 0.4)\n    .content\n      height: 100%\n      .content-left\n        height: 100%\n        position: relative\n        display: flex\n        align-items: center\n        padding-left: 80px\n        .icon-wp\n          position: absolute \n          bottom: 0\n          left: 12px\n          padding: 6px\n          border-radius: 100%\n          background-color: #141d27\n          overflow: hidden\n          z-index: 11\n          .shop-icon\n            display: flex\n            align-items: center\n            justify-content: center\n            width: 44px\n            height: 44px\n            color: $color-white\n            border-radius: 100%\n            font-size: $fontsize-large-xxx\n            background-color: rgba(255, 255, 255, 0.2)\n            &.blue-cart\n              background-color: $color-blue\n        .total-price\n          line-height: 30px\n          color: $color-white\n          font-size: $fontsize-large\n          padding-right: 12px\n          margin-right: 12px\n          border-right: 1px solid $color-white-line\n        .desp\n          font-size: $fontsize-large\n        .bubble-wp\n          position: absolute \n          left: 50px\n          top: -10px\n          z-index: 12\n      .content-right\n        position: absolute \n        right: 0\n        top: 0\n        width: 105px\n        height: 100%\n        line-height: 48px\n        text-align: center\n        &.not-enough\n          background-color: rgba(255, 255, 255, 0.2)\n        &.enough\n          background-color: $color-blue\n    .ball-wp\n      .ball\n        position: fixed\n        left: 32px \n        bottom: 22px\n        z-index: 200\n        transition: all 0.4s cubic-bezier(0.49, -0.29, 0.75, 0.41) \n        .inner\n          width: 16px\n          height: 16px\n          border-radius: 50%\n          background-color: $color-blue\n          transition: all 0.4s linear\n</style>"]}]}