{"remainingRequest":"/Users/tanlingling/Desktop/project-e/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/Desktop/project-e/sell/node_modules/cube-ui/src/components/checker/checker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/cube-ui/src/components/checker/checker.vue","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CubeCheckerItem from './checker-item.vue'\nconst COMPONENT_NAME = 'cube-checker'\nconst EVENT_INPUT = 'input'\n\nexport default {\n  name: COMPONENT_NAME,\n  props: {\n    value: [String, Number, Array],\n    options: {\n      type: Array,\n      default() {\n        /* istanbul ignore next */\n        return []\n      }\n    },\n    type: {\n      type: String,\n      default: 'checkbox'\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default() {\n        return this.options.length\n      }\n    }\n  },\n  data () {\n    return {\n      currentValue: this.value\n    }\n  },\n  computed: {\n    isRadio() {\n      return this.type === 'radio'\n    }\n  },\n  watch: {\n    value (newValue) {\n      this.currentValue = newValue\n    },\n    currentValue (val) {\n      this.$emit(EVENT_INPUT, val)\n    }\n  },\n  methods: {\n    check(option) {\n      if (this.isRadio) {\n        this.checkRadio(option)\n      } else {\n        this.checkCheckbox(option)\n      }\n    },\n    checkRadio(option) {\n      this.currentValue = option.value\n    },\n    checkCheckbox(option) {\n      const value = option.value\n      const currentValue = this.currentValue\n      const valueLen = currentValue.length\n      const min = this.min\n      const max = this.max\n\n      const index = currentValue.indexOf(value)\n\n      if (index > -1) {\n        (valueLen > min) && currentValue.splice(index, 1)\n      } else {\n        (valueLen < max) && currentValue.push(value)\n      }\n    }\n  },\n  components: {\n    CubeCheckerItem\n  }\n}\n",{"version":3,"sources":["checker.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"checker.vue","sourceRoot":"node_modules/cube-ui/src/components/checker","sourcesContent":["<template>\n  <ul class=\"cube-checker\">\n    <slot>\n      <cube-checker-item\n        v-for=\"(option, index) in options\"\n        :option=\"option\"\n        :key=\"index\" />\n    </slot>\n  </ul>\n</template>\n<script type=\"text/ecmascript-6\">\n  import CubeCheckerItem from './checker-item.vue'\n  const COMPONENT_NAME = 'cube-checker'\n  const EVENT_INPUT = 'input'\n\n  export default {\n    name: COMPONENT_NAME,\n    props: {\n      value: [String, Number, Array],\n      options: {\n        type: Array,\n        default() {\n          /* istanbul ignore next */\n          return []\n        }\n      },\n      type: {\n        type: String,\n        default: 'checkbox'\n      },\n      min: {\n        type: Number,\n        default: 0\n      },\n      max: {\n        type: Number,\n        default() {\n          return this.options.length\n        }\n      }\n    },\n    data () {\n      return {\n        currentValue: this.value\n      }\n    },\n    computed: {\n      isRadio() {\n        return this.type === 'radio'\n      }\n    },\n    watch: {\n      value (newValue) {\n        this.currentValue = newValue\n      },\n      currentValue (val) {\n        this.$emit(EVENT_INPUT, val)\n      }\n    },\n    methods: {\n      check(option) {\n        if (this.isRadio) {\n          this.checkRadio(option)\n        } else {\n          this.checkCheckbox(option)\n        }\n      },\n      checkRadio(option) {\n        this.currentValue = option.value\n      },\n      checkCheckbox(option) {\n        const value = option.value\n        const currentValue = this.currentValue\n        const valueLen = currentValue.length\n        const min = this.min\n        const max = this.max\n\n        const index = currentValue.indexOf(value)\n\n        if (index > -1) {\n          (valueLen > min) && currentValue.splice(index, 1)\n        } else {\n          (valueLen < max) && currentValue.push(value)\n        }\n      }\n    },\n    components: {\n      CubeCheckerItem\n    }\n  }\n</script>\n"]}]}