{"remainingRequest":"/Users/tanlingling/Desktop/project-e/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/Desktop/project-e/sell/node_modules/cube-ui/src/components/tab-panels/tab-panels.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/cube-ui/src/components/tab-panels/tab-panels.vue","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/project-e/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TabPanel from './tab-panel.vue'\nimport { findIndex } from '../../common/helpers/util'\nimport { prefixStyle } from '../../common/helpers/dom'\n\nconst TRANSFORM = prefixStyle('transform')\n\nconst COMPONENT_NAME = 'cube-tab-panels'\nconst INDEX_OUT_OF_BOUNDARY = -1\n\nexport default {\n  name: COMPONENT_NAME,\n  props: {\n    value: {\n      type: [String, Number]\n    },\n    data: {\n      type: Array,\n      default () {\n        return []\n      }\n    }\n  },\n  created () {\n    this.panels = []\n  },\n  mounted () {\n    this._move(this.value)\n  },\n  methods: {\n    _move(value) {\n      const curIndex = findIndex(this.panels, panel => panel.value === value)\n      /* istanbul ignore if */\n      if (curIndex === INDEX_OUT_OF_BOUNDARY) {\n        return\n      }\n      const panelsGroup = this.$refs.panelsGroup\n      const distance = -(curIndex * 100)\n      panelsGroup.style[TRANSFORM] = `translateX(${distance}%)`\n    },\n    addPanel (panel) {\n      this.panels.push(panel)\n    },\n    removePanel (panel) {\n      const index = this.panels.indexOf(panel)\n      if (index > -1) this.panels.splice(index, 1)\n    }\n  },\n  watch: {\n    value (newV) {\n      this._move(newV)\n    }\n  },\n  components: { TabPanel }\n}\n",{"version":3,"sources":["tab-panels.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tab-panels.vue","sourceRoot":"node_modules/cube-ui/src/components/tab-panels","sourcesContent":["<template>\n  <div class=\"cube-tab-panels\" ref=\"panels\">\n    <div class=\"cube-tab-panels-group\" ref=\"panelsGroup\">\n      <slot>\n        <cube-tab-panel\n          v-for=\"(item, index) in data\"\n          :label=\"item.label\"\n          :value=\"item.value\"\n          :key=\"item.value || item.label\">\n          {{item.label}}\n        </cube-tab-panel>\n      </slot>\n    </div>\n  </div>\n</template>\n<script type=\"text/ecmascript-6\">\n  import TabPanel from './tab-panel.vue'\n  import { findIndex } from '../../common/helpers/util'\n  import { prefixStyle } from '../../common/helpers/dom'\n\n  const TRANSFORM = prefixStyle('transform')\n\n  const COMPONENT_NAME = 'cube-tab-panels'\n  const INDEX_OUT_OF_BOUNDARY = -1\n\n  export default {\n    name: COMPONENT_NAME,\n    props: {\n      value: {\n        type: [String, Number]\n      },\n      data: {\n        type: Array,\n        default () {\n          return []\n        }\n      }\n    },\n    created () {\n      this.panels = []\n    },\n    mounted () {\n      this._move(this.value)\n    },\n    methods: {\n      _move(value) {\n        const curIndex = findIndex(this.panels, panel => panel.value === value)\n        /* istanbul ignore if */\n        if (curIndex === INDEX_OUT_OF_BOUNDARY) {\n          return\n        }\n        const panelsGroup = this.$refs.panelsGroup\n        const distance = -(curIndex * 100)\n        panelsGroup.style[TRANSFORM] = `translateX(${distance}%)`\n      },\n      addPanel (panel) {\n        this.panels.push(panel)\n      },\n      removePanel (panel) {\n        const index = this.panels.indexOf(panel)\n        if (index > -1) this.panels.splice(index, 1)\n      }\n    },\n    watch: {\n      value (newV) {\n        this._move(newV)\n      }\n    },\n    components: { TabPanel }\n  }\n</script>\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  .cube-tab-panels\n    position: relative\n    overflow: hidden\n\n  .cube-tab-panels-group\n    display: flex\n    transition: all .4s cubic-bezier(.86, 0, .07, 1)\n</style>\n"]}]}