{"remainingRequest":"/Users/tanlingling/Desktop/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/Desktop/sell/node_modules/cube-ui/src/components/picker/picker.vue?vue&type=style&index=0&lang=stylus&rel=stylesheet%2Fstylus&","dependencies":[{"path":"/Users/tanlingling/Desktop/sell/node_modules/cube-ui/src/components/picker/picker.vue","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@require \"../../common/stylus/mixin.styl\"\n@require \"../../common/stylus/variable.styl\"\n\n$picker-lr-padding = 16px\n\n.cube-picker-fade-enter, .cube-picker-fade-leave-active\n  opacity: 0\n\n.cube-picker-fade-enter-active, .cube-picker-fade-leave-active\n  transition: all .3s ease-in-out\n\n.cube-picker-panel\n  height: 273px\n  text-align: center\n  font-size: $fontsize-medium\n  background: $picker-bgc\n\n.cube-picker-move-enter, .cube-picker-move-leave-active\n  transform: translate3d(0, 100%, 0)\n\n.cube-picker-move-enter-active, .cube-picker-move-leave-active\n  transition: all .3s ease-in-out\n\n.cube-picker-choose\n  position: relative\n  height: 60px\n\n.cube-picker-confirm, .cube-picker-cancel\n  font-size: $fontsize-medium\n  line-height: 60px\n  padding: 0 $picker-lr-padding\n  box-sizing: content-box\n  font-size: $fontsize-medium\n\n.cube-picker-confirm\n  position: absolute\n  right: 0\n  color: $picker-confirm-btn-color\n  &:active\n    color: $picker-confirm-btn-active-color\n\n.cube-picker-cancel\n  position: absolute\n  left: 0\n  color: $picker-cancel-btn-color\n  &:active\n    color: $picker-cancel-btn-active-color\n\n.cube-picker-title-group\n  padding: 0 60px\n  display: flex\n  height: 100%\n  flex-flow: column\n  justify-content: center\n  text-align: center\n\n.cube-picker-title\n  font-size: $fontsize-large-x\n  line-height: 25px\n  font-weight: normal\n  color: $picker-title-color\n\n.cube-picker-subtitle\n  margin-top: 2px\n  line-height: 16px\n  font-size: $fontsize-small\n  color: $picker-subtitle-color\n\n.cube-picker-content\n  position: relative\n  top: 20px\n  > i\n    position: absolute\n    z-index: 10\n    left: 0\n    width: 100%\n    height: 68px\n    pointer-events: none\n    transform: translateZ(0)\n  > .border-bottom-1px\n    top: 0\n    background: linear-gradient(to top, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.8))\n  > .border-top-1px\n    bottom: 0\n    background: linear-gradient(to bottom, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.8))\n\n.cube-picker-wheel-wrapper\n  display: flex\n  padding: 0 $picker-lr-padding\n  > div\n    flex-fix()\n    height: 173px\n    overflow: hidden\n    font-size: $fontsize-large-xx\n\n.cube-picker-wheel-scroll\n  padding: 0\n  margin-top: 68px\n  line-height: 36px\n  list-style: none\n\n.cube-picker-wheel-item\n  list-style: none\n  height: 36px\n  overflow: hidden\n  white-space: nowrap\n  color: $picker-item-color\n\n.cube-picker-footer\n  height: 20px\n",{"version":3,"sources":["picker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgRA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"picker.vue","sourceRoot":"node_modules/cube-ui/src/components/picker","sourcesContent":["<template>\n  <transition name=\"cube-picker-fade\">\n    <!-- Transition animation need use with v-show in the same template. -->\n    <cube-popup\n      type=\"picker\"\n      :mask=\"true\"\n      :center=\"false\"\n      :z-index=\"zIndex\"\n      v-show=\"isVisible\"\n      @touchmove.prevent\n      @mask-click=\"maskClick\">\n      <transition name=\"cube-picker-move\">\n        <div class=\"cube-picker-panel cube-safe-area-pb\" v-show=\"isVisible\" @click.stop>\n          <div class=\"cube-picker-choose border-bottom-1px\">\n            <span class=\"cube-picker-cancel\" @click=\"cancel\">{{_cancelTxt}}</span>\n            <span class=\"cube-picker-confirm\" @click=\"confirm\">{{_confirmTxt}}</span>\n            <div class=\"cube-picker-title-group\">\n              <h1 class=\"cube-picker-title\" v-html=\"title\"></h1>\n              <h2 v-if=\"subtitle\" class=\"cube-picker-subtitle\" v-html=\"subtitle\"></h2>\n            </div>\n          </div>\n\n          <div class=\"cube-picker-content\">\n            <i class=\"border-bottom-1px\"></i>\n            <i class=\"border-top-1px\"></i>\n            <div class=\"cube-picker-wheel-wrapper\" ref=\"wheelWrapper\">\n              <div v-for=\"(data,index) in finalData\" :key=\"index\">\n                <!-- The class name of the ul and li need be configured to BetterScroll. -->\n                <ul class=\"cube-picker-wheel-scroll\">\n                  <li v-for=\"(item,index) in data\" class=\"cube-picker-wheel-item\" :key=\"index\" v-html=\"item[textKey]\">\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"cube-picker-footer\"></div>\n        </div>\n      </transition>\n    </cube-popup>\n  </transition>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import BScroll from 'better-scroll'\n  import CubePopup from '../popup/popup.vue'\n  import visibilityMixin from '../../common/mixins/visibility'\n  import popupMixin from '../../common/mixins/popup'\n  import basicPickerMixin from '../../common/mixins/basic-picker'\n  import pickerMixin from '../../common/mixins/picker'\n  import localeMixin from '../../common/mixins/locale'\n\n  const COMPONENT_NAME = 'cube-picker'\n\n  const EVENT_SELECT = 'select'\n  const EVENT_VALUE_CHANGE = 'value-change'\n  const EVENT_CANCEL = 'cancel'\n  const EVENT_CHANGE = 'change'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [visibilityMixin, popupMixin, basicPickerMixin, pickerMixin, localeMixin],\n    props: {\n      pending: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        finalData: this.data.slice()\n      }\n    },\n    created() {\n      this._values = []\n      this._indexes = this.selectedIndex\n    },\n    methods: {\n      confirm() {\n        if (!this._canConfirm()) {\n          return\n        }\n        this.hide()\n\n        let changed = false\n        let pickerSelectedText = []\n\n        const length = this.finalData.length\n        const oldLength = this._values.length\n\n        // when column count has changed.\n        if (oldLength !== length) {\n          changed = true\n          oldLength > length && (this._values.length = this._indexes.length = length)\n        }\n\n        for (let i = 0; i < length; i++) {\n          let index = this.wheels[i].getSelectedIndex()\n          this._indexes[i] = index\n\n          let value = null\n          let text = ''\n          if (this.finalData[i].length) {\n            value = this.finalData[i][index][this.valueKey]\n            text = this.finalData[i][index][this.textKey]\n          }\n          if (this._values[i] !== value) {\n            changed = true\n          }\n          this._values[i] = value\n          pickerSelectedText[i] = text\n        }\n\n        this.$emit(EVENT_SELECT, this._values, this._indexes, pickerSelectedText)\n\n        if (changed) {\n          this.$emit(EVENT_VALUE_CHANGE, this._values, this._indexes, pickerSelectedText)\n        }\n      },\n      maskClick() {\n        this.maskClosable && this.cancel()\n      },\n      cancel() {\n        this.hide()\n        this.$emit(EVENT_CANCEL)\n      },\n      show() {\n        if (this.isVisible) {\n          return\n        }\n\n        this.isVisible = true\n        if (!this.wheels || this.dirty) {\n          this.$nextTick(() => {\n            this.wheels = this.wheels || []\n            let wheelWrapper = this.$refs.wheelWrapper\n            for (let i = 0; i < this.finalData.length; i++) {\n              this._createWheel(wheelWrapper, i).enable()\n              this.wheels[i].wheelTo(this._indexes[i])\n            }\n            this.dirty && this._destroyExtraWheels()\n            this.dirty = false\n          })\n        } else {\n          for (let i = 0; i < this.finalData.length; i++) {\n            this.wheels[i].enable()\n            this.wheels[i].wheelTo(this._indexes[i])\n          }\n        }\n      },\n      hide() {\n        if (!this.isVisible) {\n          return\n        }\n        this.isVisible = false\n\n        for (let i = 0; i < this.finalData.length; i++) {\n          this.wheels[i].disable()\n        }\n      },\n      setData(data, selectedIndex) {\n        this._indexes = selectedIndex ? [...selectedIndex] : []\n        this.finalData = data.slice()\n        if (this.isVisible) {\n          this.$nextTick(() => {\n            const wheelWrapper = this.$refs.wheelWrapper\n            this.finalData.forEach((item, i) => {\n              this._createWheel(wheelWrapper, i)\n              this.wheels[i].wheelTo(this._indexes[i])\n            })\n            this._destroyExtraWheels()\n          })\n        } else {\n          this.dirty = true\n        }\n      },\n      refill(datas) {\n        let ret = []\n        if (!datas.length) {\n          return ret\n        }\n        datas.forEach((data, index) => {\n          ret[index] = this.refillColumn(index, data)\n        })\n        return ret\n      },\n      refillColumn(index, data) {\n        const wheelWrapper = this.$refs.wheelWrapper\n        let scroll = wheelWrapper.children[index].querySelector('.cube-picker-wheel-scroll')\n        let wheel = this.wheels ? this.wheels[index] : false\n        let dist = 0\n        if (scroll && wheel) {\n          let oldData = this.finalData[index]\n          this.$set(this.finalData, index, data)\n          let selectedIndex = wheel.getSelectedIndex()\n          if (oldData.length) {\n            let oldValue = oldData[selectedIndex][this.valueKey]\n            for (let i = 0; i < data.length; i++) {\n              if (data[i][this.valueKey] === oldValue) {\n                dist = i\n                break\n              }\n            }\n          }\n          this._indexes[index] = dist\n          this.$nextTick(() => {\n            // recreate wheel so that the wrapperHeight will be correct.\n            wheel = this._createWheel(wheelWrapper, index)\n            wheel.wheelTo(dist)\n          })\n        }\n        return dist\n      },\n      scrollTo(index, dist) {\n        const wheel = this.wheels[index]\n        this._indexes[index] = dist\n        wheel.wheelTo(dist)\n      },\n      refresh() {\n        this.$nextTick(() => {\n          this.wheels.forEach((wheel) => {\n            wheel.refresh()\n          })\n        })\n      },\n      _createWheel(wheelWrapper, i) {\n        if (!this.wheels[i]) {\n          const wheel = this.wheels[i] = new BScroll(wheelWrapper.children[i], {\n            wheel: {\n              selectedIndex: this._indexes[i] || 0,\n              wheelWrapperClass: 'cube-picker-wheel-scroll',\n              wheelItemClass: 'cube-picker-wheel-item'\n            },\n            swipeTime: this.swipeTime,\n            observeDOM: false\n          })\n          wheel.on('scrollEnd', () => {\n            this.$emit(EVENT_CHANGE, i, wheel.getSelectedIndex())\n          })\n        } else {\n          this.wheels[i].refresh()\n        }\n        return this.wheels[i]\n      },\n      _destroyExtraWheels() {\n        const dataLength = this.finalData.length\n        if (this.wheels.length > dataLength) {\n          const extraWheels = this.wheels.splice(dataLength)\n          extraWheels.forEach((wheel) => {\n            wheel.destroy()\n          })\n        }\n      },\n      _canConfirm() {\n        return !this.pending && this.wheels.every((wheel) => {\n          return !wheel.isInTransition\n        })\n      }\n    },\n    beforeDestroy() {\n      this.wheels && this.wheels.forEach((wheel) => {\n        wheel.destroy()\n      })\n      this.wheels = null\n    },\n    components: {\n      CubePopup\n    }\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/mixin.styl\"\n  @require \"../../common/stylus/variable.styl\"\n\n  $picker-lr-padding = 16px\n\n  .cube-picker-fade-enter, .cube-picker-fade-leave-active\n    opacity: 0\n\n  .cube-picker-fade-enter-active, .cube-picker-fade-leave-active\n    transition: all .3s ease-in-out\n\n  .cube-picker-panel\n    height: 273px\n    text-align: center\n    font-size: $fontsize-medium\n    background: $picker-bgc\n\n  .cube-picker-move-enter, .cube-picker-move-leave-active\n    transform: translate3d(0, 100%, 0)\n\n  .cube-picker-move-enter-active, .cube-picker-move-leave-active\n    transition: all .3s ease-in-out\n\n  .cube-picker-choose\n    position: relative\n    height: 60px\n\n  .cube-picker-confirm, .cube-picker-cancel\n    font-size: $fontsize-medium\n    line-height: 60px\n    padding: 0 $picker-lr-padding\n    box-sizing: content-box\n    font-size: $fontsize-medium\n\n  .cube-picker-confirm\n    position: absolute\n    right: 0\n    color: $picker-confirm-btn-color\n    &:active\n      color: $picker-confirm-btn-active-color\n\n  .cube-picker-cancel\n    position: absolute\n    left: 0\n    color: $picker-cancel-btn-color\n    &:active\n      color: $picker-cancel-btn-active-color\n\n  .cube-picker-title-group\n    padding: 0 60px\n    display: flex\n    height: 100%\n    flex-flow: column\n    justify-content: center\n    text-align: center\n\n  .cube-picker-title\n    font-size: $fontsize-large-x\n    line-height: 25px\n    font-weight: normal\n    color: $picker-title-color\n\n  .cube-picker-subtitle\n    margin-top: 2px\n    line-height: 16px\n    font-size: $fontsize-small\n    color: $picker-subtitle-color\n\n  .cube-picker-content\n    position: relative\n    top: 20px\n    > i\n      position: absolute\n      z-index: 10\n      left: 0\n      width: 100%\n      height: 68px\n      pointer-events: none\n      transform: translateZ(0)\n    > .border-bottom-1px\n      top: 0\n      background: linear-gradient(to top, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.8))\n    > .border-top-1px\n      bottom: 0\n      background: linear-gradient(to bottom, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.8))\n\n  .cube-picker-wheel-wrapper\n    display: flex\n    padding: 0 $picker-lr-padding\n    > div\n      flex-fix()\n      height: 173px\n      overflow: hidden\n      font-size: $fontsize-large-xx\n\n  .cube-picker-wheel-scroll\n    padding: 0\n    margin-top: 68px\n    line-height: 36px\n    list-style: none\n\n  .cube-picker-wheel-item\n    list-style: none\n    height: 36px\n    overflow: hidden\n    white-space: nowrap\n    color: $picker-item-color\n\n  .cube-picker-footer\n    height: 20px\n</style>\n"]}]}