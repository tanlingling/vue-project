{"remainingRequest":"/Users/tanlingling/Desktop/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanlingling/Desktop/sell/node_modules/cube-ui/src/components/scroll-nav/scroll-nav.vue?vue&type=style&index=0&lang=stylus&rel=stylesheet%2Fstylus&","dependencies":[{"path":"/Users/tanlingling/Desktop/sell/node_modules/cube-ui/src/components/scroll-nav/scroll-nav.vue","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanlingling/Desktop/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.cube-scroll-nav\n  position: relative\n  height: 100%\n  overflow: hidden\n  .cube-sticky-content\n    height: 100%\n.cube-scroll-nav-main\n  overflow: hidden\n  > .cube-sticky\n    position: static\n.cube-scroll-nav_side\n  > .cube-sticky\n    display: flex\n    > .cube-scroll-wrapper\n      flex: 1\n    > .cube-sticky-fixed\n      position: relative\n      height: 100%\n      order: -1\n  .cube-scroll-nav-main\n    > .cube-sticky-ele\n      float: left\n    > .cube-sticky\n      overflow: hidden\n",{"version":3,"sources":["scroll-nav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"scroll-nav.vue","sourceRoot":"node_modules/cube-ui/src/components/scroll-nav","sourcesContent":["<template>\n  <div class=\"cube-scroll-nav\" :class=\"{'cube-scroll-nav_side': side}\">\n    <cube-sticky ref=\"sticky\" :pos=\"scrollY\" @change=\"stickyChangeHandler\">\n      <cube-scroll\n        ref=\"scroll\"\n        :scroll-events=\"scrollEvents\"\n        :options=\"options\"\n        :data=\"data\"\n        @scroll=\"scrollHandler\"\n        @scroll-end=\"scrollEndHandler\">\n        <slot name=\"prepend\"></slot>\n        <div class=\"cube-scroll-nav-main\">\n          <cube-sticky-ele ref=\"navBarEle\" ele-key=\"cube-scroll-nav-bar\">\n            <slot name=\"bar\" :txts=\"barTxts\" :labels=\"labels\" :current=\"active\">\n              <cube-scroll-nav-bar\n                :direction=\"barDirection\"\n                :txts=\"barTxts\"\n                :labels=\"labels\"\n                :current=\"active\" />\n            </slot>\n          </cube-sticky-ele>\n          <cube-sticky\n            ref=\"pageSticky\"\n            :offset=\"pageStickyOffset\"\n            :pos=\"scrollY\"\n            @change=\"pageStickyChangeHandler\">\n            <div class=\"cube-scroll-nav-panels\">\n              <slot></slot>\n            </div>\n            <template slot=\"fixed\" v-if=\"!side\">\n              <div></div>\n            </template>\n          </cube-sticky>\n        </div>\n      </cube-scroll>\n    </cube-sticky>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import scrollMixin from '../../common/mixins/scroll'\n\n  import CubeSticky from '../sticky/sticky.vue'\n  import CubeStickyEle from '../sticky/sticky-ele.vue'\n  import CubeScroll from '../scroll/scroll.vue'\n  import CubeScrollNavBar from '../scroll-nav-bar/scroll-nav-bar.vue'\n\n  const DIRECTION_H = 'horizontal'\n  const DIRECTION_V = 'vertical'\n\n  const COMPONENT_NAME = 'cube-scroll-nav'\n  const EVENT_CHANGE = 'change'\n  const EVENT_STICKY_CHANGE = 'sticky-change'\n\n  export default {\n    name: COMPONENT_NAME,\n    provide() {\n      return {\n        scrollNav: this\n      }\n    },\n    mixins: [scrollMixin],\n    props: {\n      data: {\n        type: Array\n      },\n      speed: {\n        type: Number,\n        default: 300\n      },\n      side: {\n        type: Boolean,\n        default: false\n      },\n      current: {\n        type: [String, Number],\n        default: ''\n      }\n    },\n    data() {\n      return {\n        scrollEvents: ['scroll', 'scroll-end'],\n        scrollY: 0,\n        panels: [],\n        active: this.current,\n        pageStickyOffset: 0\n      }\n    },\n    computed: {\n      labels() {\n        return this.panels.map((panel) => panel.label)\n      },\n      barTxts() {\n        return this.panels.map((panel) => panel.title)\n      },\n      barDirection() {\n        return this.side ? DIRECTION_V : DIRECTION_H\n      }\n    },\n    watch: {\n      current(newVal) {\n        this.stickyCurrent = newVal\n        this.active = newVal\n        this.jumpTo(newVal)\n      },\n      active(newVal) {\n        this.$emit(EVENT_CHANGE, newVal)\n      }\n    },\n    created() {\n      this.navBar = null\n      this.stickyCurrent = this.current\n    },\n    mounted() {\n      this.$nextTick(() => {\n        if (this.side) {\n          const fixedEle = this.$refs.pageSticky.$refs.fixedEle\n          this.$refs.scroll.$el.appendChild(fixedEle)\n        }\n        if (!this.current) {\n          this.active = this.stickyCurrent = this.labels[0]\n        }\n        this.refresh()\n        this.jumpTo(this.current)\n      })\n    },\n    methods: {\n      refresh() {\n        this.navBar && this.navBar.refresh()\n        this.$refs.sticky.refresh()\n        this.$refs.pageSticky.refresh()\n        this.pageStickyOffset = this.side ? 0 : this.$refs.navBarEle.$el.offsetHeight\n        this.$refs.scroll.refresh()\n      },\n      setBar(bar) {\n        this.navBar = bar\n      },\n      barChange(label) {\n        this.active = label\n        // waiting touchend\n        // so the inner scroll won't affect the touchend logic\n        this.$nextTick(() => {\n          this.jumpTo(label)\n        })\n      },\n      jumpTo(label) {\n        if (!label) {\n          return\n        }\n        const panel = this.getPanel(label)\n        if (panel) {\n          this._jumping = true\n          const offset = this.pageStickyOffset\n          this.$refs.scroll.scrollToElement(panel.$el, this.speed, 0, this.side ? offset : -offset)\n        }\n      },\n      getPanel(label) {\n        let panel = null\n        this.panels.some((_panel) => {\n          if (_panel.label === label) {\n            panel = _panel\n            return true\n          }\n        })\n        return panel\n      },\n      pageStickyChangeHandler(current) {\n        if (current === '') {\n          current = this.labels[0]\n        }\n        this.stickyCurrent = current\n        if (this._jumping) {\n          return\n        }\n        this.active = current\n      },\n      stickyChangeHandler(current) {\n        // when sticky change waiting dom changed\n        // then refresh navBar(navBar will get correct height)\n        this.$nextTick(() => {\n          this.navBar && this.navBar.refresh()\n        })\n        this.$emit(EVENT_STICKY_CHANGE, current)\n      },\n      scrollHandler(pos) {\n        this.scrollY = -pos.y\n        if (!this._jumping) {\n          this.active = this.stickyCurrent\n        }\n      },\n      scrollEndHandler() {\n        this._jumping = false\n      },\n      addPanel(panel) {\n        this.panels.push(panel)\n      },\n      removePanel(panel) {\n        const i = this.panels.indexOf(panel)\n        this.panels.splice(i, 1)\n      }\n    },\n    components: {\n      CubeSticky,\n      CubeStickyEle,\n      CubeScroll,\n      CubeScrollNavBar\n    }\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  .cube-scroll-nav\n    position: relative\n    height: 100%\n    overflow: hidden\n    .cube-sticky-content\n      height: 100%\n  .cube-scroll-nav-main\n    overflow: hidden\n    > .cube-sticky\n      position: static\n  .cube-scroll-nav_side\n    > .cube-sticky\n      display: flex\n      > .cube-scroll-wrapper\n        flex: 1\n      > .cube-sticky-fixed\n        position: relative\n        height: 100%\n        order: -1\n    .cube-scroll-nav-main\n      > .cube-sticky-ele\n        float: left\n      > .cube-sticky\n        overflow: hidden\n</style>\n"]}]}